// ==UserScript==
// @name         hammerB站HTPC遥控器
// @namespace    http://tampermonkey.net/
// @version      2025-06-22
// @description  try to take over the world!
// @author       You
// @match        https://www.bilibili.com*
// @match        https://t.bilibili.com/?tab=video*
// @match        https://www.bilibili.com/history*
// @match        https://www.bilibili.com/video/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=bilibili.com
// @grant        unsafeWindow
// @grant        GM_addElement
// @grant        GM_xmlhttpRequest
// @grant        GM_getResourceText
// @grant window.close
// @grant window.focus
// @run-at       document-end
// ==/UserScript==
(function() {
    'use strict';
    let scriptContent='';
    scriptContent='\n// --> /data/codes/advanced/frontend/web/static/js/hammer/kl-hammer.js\n/**\r\n * Created by markedboat on 2019/12/19.\r\n */\r\n"use strict";\r\n/*jshint esversion: 6 */\r\n/*globals document,console,window,XPathResult,XMLHttpRequest,FormData,HTMLElement,Option,URLSearchParams */\r\n/* exported Emt,domLoaded */\r\n\r\n\r\n// Object.prototype.isStdArray = function () {\r\n//     return typeof this.forEach === \'function\';\r\n// };\r\nif (window.hasKl === undefined) {\r\n    window.hasKl = true;\r\n\r\n    let hasKl = false;\r\n    try {\r\n        let kl = kl || undefined;\r\n        hasKl = true;\r\n    } catch (e) {\r\n        let kl = undefined;\r\n\r\n    }\r\n    if (hasKl === false) {\r\n        var kl = {\r\n            opt: {log: true},\r\n            log: console.log,\r\n            warrning: console.warn,\r\n            error: console.error,\r\n\r\n            __log: console.log,\r\n            __warn: console.warn,\r\n            __error: console.error,\r\n\r\n\r\n            isset: function (arg) {\r\n                return typeof arg !== \'undefined\';\r\n            },\r\n            id: function (id) {\r\n                return document.getElementById(id);\r\n            },\r\n\r\n            getValByPath: function (object, keysPath, defaultVal) {\r\n                if (object === undefined) {\r\n                    return defaultVal || undefined;\r\n                }\r\n\r\n                let keys = keysPath.replace(/\\]\\[/ig, \'.\').replace(/\\]/ig, \'\').replace(/\\[/ig, \'.\').split(\'.\').filter(v => {\r\n                    return v.length > 0;\r\n                });\r\n                if (keys.length === 0) {\r\n                    return object;\r\n                }\r\n                let last = keys.splice(-1);\r\n                let last_obj = [object].concat(keys).reduce(function (a, b) {\r\n                    return (a[b] === undefined || typeof a[b] !== \'object\') ? {} : a[b];\r\n                });\r\n                if (defaultVal === undefined) {\r\n                    return ((last_obj[last] === null) ? undefined : last_obj[last]);\r\n                } else {\r\n                    return ((last_obj[last] === null) ? undefined : last_obj[last]) || defaultVal;\r\n                }\r\n\r\n            },\r\n            setValByPath: function (object, keysPath, value) {\r\n                let keys = keysPath.split(\'.\');\r\n                let last = keys.splice(-1);\r\n                [object].concat(keys).reduce(function (a, b) {\r\n                    if (a[b] === undefined) a[b] = {};\r\n                    return a[b];\r\n                })[last] = value;\r\n                return kl;\r\n            },\r\n\r\n            isUndefined: function (baseVar, attr_path) {\r\n                let tmp_ar = attr_path.split(\'.\');\r\n                return tmp_ar.reduce(function (base_var, attr) {\r\n                    // kl.log(base_var, attr, base_var[attr], \'xxxx\');\r\n                    return base_var === undefined || base_var === null || typeof base_var[attr] === \'undefined\' ? undefined : base_var[attr];\r\n                }, baseVar) === undefined;\r\n            },\r\n            xpathSearch: function (xpath, context) {\r\n                let nodes = [];\r\n                try {\r\n                    let doc = (context && context.ownerDocument) || window.document;\r\n                    let results = doc.evaluate(xpath, context || doc, null, XPathResult.ANY_TYPE, null);\r\n                    let node;\r\n// while (node = results.iterateNext()) {\r\n//                 nodes.push(node);\r\n//             }\r\n                    while (true) {\r\n                        node = results.iterateNext();\r\n                        if (node) {\r\n                            nodes.push(node);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    throw e;\r\n                }\r\n                return nodes;\r\n            },\r\n            /**\r\n             * json 解码\r\n             * <br>!!!只要原参数是 object ，不会检查是不是数组\r\n             * @param sourceData\r\n             * @param defaultValue\r\n             * @returns {{}|any}\r\n             */\r\n            jsonDecode: function (sourceData, defaultValue) {\r\n                if (sourceData === null || sourceData === undefined) {\r\n                    return defaultValue;\r\n                }\r\n                let sourceDataType = typeof sourceData;\r\n                let res;\r\n                if (sourceDataType === \'string\') {\r\n                    try {\r\n                        res = JSON.parse(sourceData);\r\n                        return res;\r\n                    } catch (e) {\r\n                        return defaultValue;\r\n                    }\r\n                } else {\r\n                    if (sourceDataType === \'object\') {\r\n                        return sourceData;\r\n                    }\r\n                    return defaultValue;\r\n                }\r\n            },\r\n\r\n\r\n            getCookie: function (cookie_name) {\r\n                let cks = document.cookie.split(\';\');\r\n                for (let i = 0; i < cks.length; i++) {\r\n                    if (cks[i].search(cookie_name) !== -1) {\r\n                        return decodeURIComponent(cks[i].replace(cookie_name + \'=\', \'\'));\r\n                    }\r\n                }\r\n            },\r\n\r\n            setCookie: function (name, val, day, domain) {\r\n                let date = new Date();\r\n                date.setTime(date.getTime() + day * 24 * 3600 * 1000);\r\n                let time_out = date.toGMTString();\r\n                //kl.log(time_out, val);\r\n                document.cookie = name + \'=\' + encodeURIComponent(val) + \';expires=\' + time_out + \';path=/;domain=\' + domain;\r\n            },\r\n            /**\r\n             * 将多维 object 转化成 from的key=>name\r\n             * @param fromData\r\n             * @param input_data\r\n             * @param level\r\n             * @param name_root\r\n             */\r\n            data2form: function (fromData, input_data, level, name_root) {\r\n                if (level === 0) {\r\n                    for (let k in input_data) {\r\n                        if (typeof input_data[k] === \'object\') {\r\n                            kl.data2form(fromData, input_data[k], 1, k);\r\n                        } else {\r\n                            fromData.append(k, input_data[k]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let k in input_data) {\r\n                        if (typeof input_data[k] === \'object\') {\r\n                            kl.data2form(fromData, input_data[k], level + 1, name_root + \'[\' + k + \']\');\r\n                        } else {\r\n                            fromData.append(name_root + \'[\' + k + \']\', input_data[k]);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n\r\n            /**\r\n             * 将多维 object 转化成 from的key=>name\r\n             * @param dstList\r\n             * @param input_data\r\n             * @param level\r\n             * @param name_root\r\n             */\r\n            data2list: function (dstList, input_data, level, name_root) {\r\n                if (level === 0) {\r\n                    for (let k in input_data) {\r\n                        if (typeof input_data[k] === \'object\') {\r\n                            kl.data2list(dstList, input_data[k], 1, k);\r\n                        } else {\r\n                            dstList.push({key: k, val: input_data[k]});\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let k in input_data) {\r\n                        if (typeof input_data[k] === \'object\') {\r\n                            kl.data2list(dstList, input_data[k], level + 1, name_root + \'[\' + k + \']\');\r\n                        } else {\r\n                            dstList.push({key: name_root + \'[\' + k + \']\', val: input_data[k]});\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n\r\n            /**\r\n             *\r\n             * @param opts\r\n             */\r\n            ajax: function (opts) {\r\n                let request = new XMLHttpRequest();\r\n                opts.httpOkCodes = opts.httpOkCodes || [200];\r\n                if (opts.httpOkCodes.indexOf(200) === -1) {\r\n                    opts.httpOkCodes.push(200);\r\n                }\r\n                request.timeout = (opts.timeout || 30) * 1000;\r\n                request.responseType = opts.responseType || request.responseType;\r\n                //opts.xhrSetting.withCredentials 设置运行跨域操作\r\n                if (typeof opts.xhrSetting === \'object\') {\r\n                    for (let key in opts.xhrSetting) {\r\n                        request[key] = opts.xhrSetting[key]; // 设置运行跨域操作\r\n                    }\r\n                }\r\n\r\n                if (opts.async !== true) {\r\n                    request.addEventListener("load", function () {\r\n                        if (typeof opts.onload === \'function\') {\r\n                            opts.onload(request);\r\n                        } else {\r\n                            if (opts.httpOkCodes.indexOf(request.status) !== -1) {\r\n                                let result = request.responseText;\r\n                                if (opts.type === \'json\') {\r\n                                    try {\r\n                                        result = JSON.parse(request.responseText);\r\n                                    } catch (e) {\r\n                                        if (opts.error) {\r\n                                            opts.error(\'请求结果不能保存为 json\');\r\n                                        }\r\n                                    }\r\n                                }\r\n                                opts.success(result);\r\n                            } else {\r\n                                if (opts.error) {\r\n                                    opts.error(request.status + \':\' + request.statusText);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }, false);\r\n                }\r\n\r\n                request.addEventListener("timeout", function () {\r\n                    kl.log(\'出错了\');\r\n                    if (opts.error) opts.error(request.statusText, \'timeout\');\r\n                }, false);\r\n\r\n                request.addEventListener("error", function () {\r\n                    kl.log(\'出错了\');\r\n                    if (opts.error) opts.error(request.statusText, \'error\');\r\n                }, false);\r\n\r\n                request.addEventListener("abort", function () {\r\n                    kl.log(\'中断了\');\r\n                    if (opts.error) opts.error(request.statusText, \'abort\');\r\n                }, false);\r\n\r\n                if (opts.progress) {\r\n                    request.upload.addEventListener("progress", function (evt) {\r\n                        if (evt.lengthComputable) {\r\n                            opts.progress(evt.loaded, evt.total);\r\n                        }\r\n                    }, false);\r\n                }\r\n\r\n\r\n                //request.onreadystatechange = requestCallback;\r\n                opts.form = opts.form || new FormData();\r\n                if (opts.data) {\r\n                    kl.data2form(opts.form, opts.data, 0, \'\');\r\n                }\r\n\r\n                if (opts.method === \'GET\') {\r\n                    let str = (new URLSearchParams(opts.form).toString());\r\n                    opts.url = opts.url.indexOf(\'?\') === -1 ? `${opts.url}?${str}` : `${opts.url}&${str}`;\r\n                }\r\n\r\n                request.open((opts.method || "POST"), opts.url, true);\r\n                if (opts.isAjax !== false) {\r\n                    request.setRequestHeader("X-Requested-With", "XMLHttpRequest");\r\n                }\r\n                //request.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");\r\n                if (opts.headers && typeof opts.headers.forEach === \'function\') {\r\n                    opts.headers.forEach((header_ar) => {\r\n                        request.setRequestHeader(header_ar[0], header_ar[1]);\r\n                    });\r\n                }\r\n\r\n\r\n                if (opts.async === true) {\r\n                    return new Promise(function (resolve) {\r\n                        request.send(opts.form);\r\n                        request.onload = function () {\r\n                            if (request.status === 200 || opts.httpOkCodes.indexOf(request.status) !== -1) {\r\n                                let result = request.responseText;\r\n                                if (opts.type === \'json\') {\r\n                                    try {\r\n                                        result = JSON.parse(request.responseText);\r\n                                    } catch (e) {\r\n                                        return resolve({isOk: false, msg: \'json结构异常\', request: {status: request.status, statusText: request.statusText, responseText: request.responseText}});\r\n                                    }\r\n                                }\r\n                                //return resolve({isOk: true, result: result});\r\n                                return resolve({isOk: true, result: result, request: {status: request.status, statusText: request.statusText, responseText: request.responseText}});\r\n                            } else {\r\n                                return resolve({isOk: false, msg: \'请求异常\', request: {status: request.status, statusText: request.statusText, responseText: request.responseText}});\r\n                                //return reject(request.status + \':\' + request.statusText);\r\n                            }\r\n                        };\r\n                    });\r\n                } else {\r\n                    request.send(opts.form);\r\n                }\r\n                return request;\r\n            },\r\n            getStack: function () {\r\n                //    kl.log.apply(function(){},arguments)\r\n                return new Error().stack.replace(\'Error\', \'Stack\');\r\n            },\r\n\r\n            HTML: {\r\n                lib: {\r\n                    tableCellResize: {\r\n                        hasAddEventListener: false,\r\n                        isResizing: false,\r\n                        currentResizer: false,\r\n                        startX: 0,\r\n                        startWidth: 0,\r\n                        handleKlTableCellResizeMouseMove: function (e) {\r\n                            // kl.log(\'mouse move\',isResizing,currentResizer);\r\n                            if (!kl.HTML.lib.tableCellResize.isResizing || !kl.HTML.lib.tableCellResize.currentResizer) {\r\n                                return false;\r\n                            }\r\n                            const width = kl.HTML.lib.tableCellResize.startWidth + e.clientX - kl.HTML.lib.tableCellResize.startX;\r\n                            kl.HTML.lib.tableCellResize.currentResizer.parentElement.style.width = width + \'px\';\r\n                        },\r\n\r\n                        stopKlTableCellResizeResize: function () {\r\n                            kl.HTML.lib.tableCellResize.isResizing = false;\r\n                            kl.HTML.lib.tableCellResize.currentResizer = false;\r\n                            //   document.removeEventListener(\'mousemove\', handleKlTableCellResizeMouseMove);\r\n                            //   document.removeEventListener(\'mouseup\', stopKlTableCellResizeResize);\r\n                        },\r\n                        init: function () {\r\n                            if (kl.HTML.lib.tableCellResize.hasAddEventListener === true) {\r\n                                return false;\r\n                            }\r\n                            kl.HTML.lib.tableCellResize.hasAddEventListener = true;\r\n                            document.addEventListener(\'mousemove\', kl.HTML.lib.tableCellResize.handleKlTableCellResizeMouseMove);\r\n                            document.addEventListener(\'mouseup\', kl.HTML.lib.tableCellResize.stopKlTableCellResizeResize);\r\n\r\n                            document.body.addNodes([\r\n                                kl.HTML.STYLE().setPros({\r\n                                    innerHTML: `\r\n        .kl-table {\r\n            border-collapse: collapse;\r\n            width: 100%;\r\n        }\r\n\r\n        .kl-table th, .kl-table td {\r\n            border: 1px solid #ddd;\r\n            padding: 8px;\r\n            text-align: left;\r\n            position: relative;\r\n        }\r\n\r\n        .kl-table .kl-cell-resizer {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            width: 5px;\r\n            height: 100%;\r\n            cursor: col-resize;\r\n        }\r\n                        `\r\n                                }),\r\n                            ]);\r\n                        }\r\n                    },\r\n                    drag: {\r\n                        hasAddEventListener: false,\r\n                        currDrag: false,\r\n                        currHook: false,\r\n                        hookKV: {\r\n                            //flag:  {flag:falg,state: true},\r\n                        },\r\n                        common: {\r\n                            addDraggingStyle: (e) => {\r\n                                e.target.classList.add(\'kl-in-dragging\');\r\n                            },\r\n                            removeDraggingStyle: (e) => {\r\n                                e.target.classList.remove(\'kl-in-dragging\');\r\n                            },\r\n                            addHoverStyle: (e) => {\r\n                                e.target.classList.add(\'kl-drag-hover\');\r\n                            },\r\n                            removeHoverStyle: (e) => {\r\n                                e.target.classList.remove(\'kl-drag-hover\');\r\n                            },\r\n                        },\r\n                        addHook: function (flag, opt) {\r\n                            console.log(flag, opt);\r\n                            kl.HTML.lib.drag.init();\r\n                            if (kl.HTML.lib.drag.hookKV[flag]) {\r\n                                kl.error(\'hooks.flag重复\', flag);\r\n                                return false;\r\n                            }\r\n                            opt = opt || {};\r\n                            let tmp = {flag: flag, state: true,};\r\n                            tmp.drag = opt.drag || {};\r\n                            tmp.drag.start = tmp.drag.start || {};\r\n                            tmp.drag.end = tmp.drag.end || {};\r\n                            tmp.drag.hoverIn = tmp.drag.hoverIn || {};\r\n                            tmp.drag.hoverOut = tmp.drag.hoverOut || {};\r\n                            tmp.drop = opt.drop || {};\r\n\r\n                            tmp.drag.start.filter = tmp.drag.start.filter || function () {\r\n                                return true;\r\n                            };\r\n                            tmp.drag.start.call = tmp.drag.start.call || kl.HTML.lib.drag.common.addDraggingStyle;\r\n\r\n                            tmp.drag.end.filter = tmp.drag.end.filter || function () {\r\n                                return true;\r\n                            };\r\n                            tmp.drag.end.call = tmp.drag.end.call || kl.HTML.lib.drag.common.removeDraggingStyle;\r\n\r\n\r\n                            tmp.drag.hoverIn.filter = tmp.drag.hoverIn.filter || function (e) {\r\n                                //   e.preventDefault(); // 必须阻止默认行为\r\n                                return true;\r\n                            };\r\n                            tmp.drag.hoverIn.call = tmp.drag.hoverIn.call || kl.HTML.lib.drag.common.addHoverStyle;\r\n\r\n\r\n                            tmp.drag.hoverOut.filter = tmp.drag.hoverOut.filter || function () {\r\n                                return true;\r\n                            };\r\n                            tmp.drag.hoverOut.call = tmp.drag.hoverOut.call || kl.HTML.lib.drag.common.removeHoverStyle;\r\n\r\n\r\n                            tmp.drop.filter = tmp.drop.filter || function () {\r\n                                return true;\r\n                            };\r\n                            tmp.drop.call = tmp.drop.call || function (e) {\r\n                                e.preventDefault();\r\n                                kl.log(kl.HTML.lib.drag.currDrag);\r\n                            };\r\n\r\n                            kl.HTML.lib.drag.hookKV[flag] = tmp;\r\n                            kl.log(\'addHook\', tmp, kl.HTML.lib.drag.hookKV);\r\n                        },\r\n                        disableHook: function (flag) {\r\n                            if (kl.HTML.lib.drag.hookKV[flag]) {\r\n                                kl.HTML.lib.drag.hookKV[flag].state = false;\r\n                            }\r\n\r\n                        },\r\n                        enableHook: function (flag) {\r\n                            if (kl.HTML.lib.drag.hookKV[flag]) {\r\n                                kl.HTML.lib.drag.hookKV[flag].state = true;\r\n                            }\r\n                        },\r\n                        /**\r\n                         *  添加一个拖拽钩子\r\n                         *  @param {string} flag 钩子标识\r\n                         *  @param {object} opt 钩子配置\r\n                         *  @param {function} opt.call drop事件的回调\r\n                         *  @param {string} opt.srcClassname 可以拖拽的classname,用于帅选\r\n                         *  @param {string} opt.dstClassname 可以放置的 classname，用于筛选\r\n                         *  @param {string} opt.draggingClassname 拖拽中的样式 classname\r\n                         *  @param {string} opt.hoverClassname 可以防止的样子 classname\r\n                         *\r\n                         *  */\r\n                        addSimpleHook: function (flag, opt) {\r\n                            opt = opt || {};\r\n                            let draggingElement;\r\n                            let srcClassname = opt.srcClassname || \'drag-src-item\';\r\n                            let dstClassname = opt.dstClassname || \'drag-dst-item\';\r\n                            let draggingClassname = opt.draggingClassname || \'kl-in-dragging\';\r\n                            let hoverClassname = opt.hoverClassname || \'kl-drag-hover\';\r\n                            let call = opt.call || function (srcElement, dstElement) {\r\n                                kl.log({srcElement: srcElement, dstElement: dstElement});\r\n                            };\r\n\r\n                            console.log(opt, srcClassname, opt.srcClassname, opt.srcClassname || \'drag-src-item\');\r\n\r\n                            let srcFilter = (e, eventType) => {\r\n                                let res = e.target.classList.contains(srcClassname);\r\n                                //   kl.log(\'srcFilter:\', eventType, e.target, res,srcClassname);\r\n                                return res;\r\n                            };\r\n                            let dstFilter = (e, eventType) => {\r\n                                let res = e.target.classList.contains(dstClassname) && e.target !== draggingElement;\r\n                                //  kl.log(\'dstFilter:\', eventType, e.target, res,dstClassname);\r\n                                return res;\r\n                            };\r\n\r\n                            kl.HTML.lib.drag.addHook(flag, {\r\n                                drag: {\r\n                                    start: {\r\n                                        filter: srcFilter,\r\n                                        call: function (e) {\r\n\r\n                                            draggingElement = e.target;\r\n                                            draggingElement.classList.add(draggingClassname);\r\n                                            //  kl.log(\'start:\', e.target);\r\n                                        },\r\n                                    },\r\n                                    end: {\r\n                                        filter: srcFilter,\r\n                                        call: function (e) {\r\n                                            //  kl.log(\'end:\', e.target);\r\n                                            draggingElement.classList.remove(draggingClassname);\r\n                                            draggingElement = false;\r\n                                        },\r\n                                    },\r\n                                    hoverIn: {\r\n                                        filter: dstFilter,\r\n                                        call: function (e) {\r\n                                            e.target.classList.add(hoverClassname);\r\n                                        },\r\n                                    },\r\n                                    hoverOut: {\r\n                                        filter: () => {\r\n                                            return true;\r\n                                        },\r\n                                        call: function (e) {\r\n                                            e.target.classList.remove(hoverClassname);\r\n                                        },\r\n                                    },\r\n                                },\r\n                                drop: {\r\n                                    filter: dstFilter,\r\n                                    call: function (e) {\r\n                                        let targetTagElement = e.target;\r\n                                        e.target.classList.remove(hoverClassname);\r\n                                        // kl.log(\'drag->dropOn\', draggingElement, targetTagElement);\r\n                                        call(draggingElement, targetTagElement);\r\n                                    },\r\n                                },\r\n                            });\r\n\r\n                        },\r\n                        init: function () {\r\n                            if (kl.HTML.lib.drag.hasAddEventListener === true) {\r\n                                kl.warn(\'drag.hasAddEventListener\', true);\r\n                                return false;\r\n                            }\r\n                            // 全局监听拖拽事件\r\n                            document.addEventListener(\'dragstart\', (e) => {\r\n                                for (const [flag, hook] of Object.entries(kl.HTML.lib.drag.hookKV)) {\r\n                                    if (hook.state === true && hook.drag.start.filter(e, \'dragstart\')) {\r\n                                        kl.HTML.lib.drag.currHook = hook;\r\n                                        hook.drag.start.call(e);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            document.addEventListener(\'dragend\', (e) => {\r\n                                if (kl.HTML.lib.drag.currHook && kl.HTML.lib.drag.currHook.state === true && kl.HTML.lib.drag.currHook.drag.end.filter(e, \'dragend\')) {\r\n                                    kl.HTML.lib.drag.currHook.drag.end.call(e);\r\n                                    kl.HTML.lib.drag.currHook = false;\r\n                                }\r\n                            });\r\n\r\n                            document.addEventListener(\'dragover\', (e) => {\r\n                                if (kl.HTML.lib.drag.currHook.state === true && kl.HTML.lib.drag.currHook.drag.hoverIn.filter(e)) {\r\n                                    //console.log(\'dragover:\', e.target, e);\r\n                                    e.preventDefault(); // 必须是  dragover 和   preventDefault,才能  阻止默认行为以允许放置 ，不然不能放置\r\n                                    kl.HTML.lib.drag.currHook.drag.hoverIn.call(e, \'dragover\');\r\n                                }\r\n                            });\r\n\r\n                            document.addEventListener(\'dragleave\', (e) => {\r\n                                //  console.log(\'dragleave:\', e.target, e);\r\n\r\n                                if (kl.HTML.lib.drag.currHook.state === true && kl.HTML.lib.drag.currHook.drag.hoverOut.filter(e)) {\r\n                                    kl.HTML.lib.drag.currHook.drag.hoverOut.call(e);\r\n                                }\r\n                            });\r\n\r\n                            document.addEventListener(\'drop\', (e) => {\r\n                                //  console.log(\'drop\', e);\r\n                                if (kl.HTML.lib.drag.currHook.state === true && kl.HTML.lib.drag.currHook.drop.filter(e)) {\r\n                                    e.preventDefault();\r\n                                    kl.HTML.lib.drag.currHook.drop.call(e);\r\n                                }\r\n                            });\r\n\r\n                            document.body.addNodes([\r\n                                kl.HTML.STYLE().setPros({\r\n                                    innerHTML: `\r\n        .kl-in-dragging {\r\n            border:1px dashed #000 !important;\r\n            box-sizing: border-box;\r\n        } \r\n\r\n        \r\n\r\n        .kl-drag-hover {\r\n            border: 0.3em dashed #000 !important;\r\n            box-sizing: border-box; \r\n        }\r\n       \r\n       \r\n                        `\r\n                                }),\r\n                            ]);\r\n\r\n                            kl.HTML.lib.drag.hasAddEventListener = true;\r\n                        }\r\n                    },\r\n                },\r\n                /**\r\n                 @return {HTMLDivElement}\r\n                 */\r\n                DIV: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'div\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLSelectElement}\r\n                 */\r\n                SELECT: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'select\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLInputElement}\r\n                 */\r\n                INPUT: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'input\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLInputElement}\r\n                 */\r\n                INPUT_TEXT: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    attrsStr += \' type="text"\';\r\n                    return new Emt(\'input\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLInputElement}\r\n                 */\r\n                INPUT_NUMBER: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    attrsStr += \' type="number"\';\r\n                    return new Emt(\'input\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return\r\n                 */\r\n                Ymd: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    let span = new Emt(\'span\', \'\', \'\', {});\r\n                    attrsStr += \' type="date"\';\r\n                    let input = new Emt(\'input\', attrsStr, \'\', {});\r\n                    let tmp_ymd_obj = {\r\n                        getYmd: function () {\r\n                            let res = parseInt(input.value.replace(/-/ig, \'\'));\r\n                            if (typeof res === \'number\' && !isNaN(res)) {\r\n                                return res;\r\n                            }\r\n                            return 0;\r\n                        },\r\n                        setYmd: function (ymd) {\r\n                            input.value = ymd.toString().replace(/^(\\d{4})(\\d{2})(\\d{2})/ig, \'$1-$2-$3\');\r\n                        },\r\n                    };\r\n\r\n                    span = Object.assign(span, tmp_ymd_obj);\r\n                    //let exp = /^\\d+$/;\r\n                    Object.defineProperty(span, \'value\', {\r\n                        set: function (v) {\r\n                            tmp_ymd_obj.setYmd(v);\r\n                        },\r\n                        get: function () {\r\n                            return tmp_ymd_obj.getYmd();\r\n                        },\r\n                    });\r\n                    input.setPros(prototypeMap);\r\n                    input.addEventListener(\'change\', () => {\r\n                        span.dispatchEvent(new Event(\'change\'));\r\n                    });\r\n\r\n                    return span.addNodes([input]);\r\n\r\n                },\r\n                Ym: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    let span = new Emt(\'span\', \'\', \'\', {});\r\n                    attrsStr += \' type="month"\';\r\n                    let input = new Emt(\'input\', attrsStr, \'\', {});\r\n\r\n\r\n                    let tmp_YM_obj = {\r\n                        getYm: function () {\r\n                            let res = parseInt(input.value.replace(/-/ig, \'\'));\r\n                            if (typeof res === \'number\' && !isNaN(res)) {\r\n                                return res;\r\n                            }\r\n                            return 0;\r\n                        },\r\n                        setYm: function (ymd) {\r\n                            input.value = ymd.toString().substring(0, 6).replace(/^(\\d{4})(\\d{2})/ig, \'$1-$2\');\r\n                        },\r\n                    };\r\n\r\n                    span = Object.assign(span, tmp_YM_obj);\r\n                    //let exp = /^\\d+$/;\r\n                    Object.defineProperty(span, \'value\', {\r\n                        set: function (v) {\r\n                            tmp_YM_obj.setYmd(v);\r\n                        },\r\n                        get: function () {\r\n                            return tmp_YM_obj.getYmd();\r\n                        },\r\n                    });\r\n                    input.setPros(prototypeMap);\r\n                    input.addEventListener(\'change\', () => {\r\n                        span.dispatchEvent(new Event(\'change\'));\r\n                    });\r\n                    return span.addNodes([input]);\r\n                },\r\n                /**\r\n                 *\r\n                 * @param attrsStr\r\n                 * @param textContent\r\n                 * @param prototypeMap  val:[trueVal,falseVal]\r\n                 * @return {HTMLInputElement}\r\n                 * @constructor\r\n                 */\r\n                CHECKBOX: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    attrsStr += \' type="checkbox"\';\r\n                    if (prototypeMap.vals && Array.isArray(prototypeMap.vals)) {\r\n                        let vals = prototypeMap.vals;\r\n                        let val = undefined;\r\n                        if (prototypeMap.value !== undefined) {\r\n                            val = prototypeMap.value;\r\n                            delete prototypeMap.value;\r\n                        }\r\n                        /** @type {HTMLInputElement} */\r\n                        let input = new Emt(\'input\', attrsStr, textContent, prototypeMap);\r\n                        Object.defineProperty(input, \'value\', {\r\n                            set: function (v) {\r\n                                input.checked = v.toString() === vals[0].toString();\r\n                            },\r\n                            get: function () {\r\n                                return input.checked === true ? vals[0] : vals[1];\r\n                            },\r\n                        });\r\n                        if (val !== undefined) {\r\n                            input.value = val;\r\n                        }\r\n                        return input;\r\n                    } else {\r\n\r\n\r\n                        return new Emt(\'input\', attrsStr, textContent, prototypeMap);\r\n                    }\r\n                },\r\n                /**\r\n                 @return {HTMLPreElement}\r\n                 */\r\n                PRE: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'pre\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLLabelElement}\r\n                 */\r\n                LABEL: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'label\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLSpanElement}\r\n                 */\r\n                SPAN: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'span\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLEmbedElement}\r\n                 */\r\n                EM: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'em\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLButtonElement}\r\n                 */\r\n                BUTTON: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'button\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLButtonElement}\r\n                 */\r\n                BUTTON_BUTTON: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    attrsStr += \' type="button"\';\r\n                    return new Emt(\'button\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLButtonElement}\r\n                 */\r\n                BUTTON_SUBMIT: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    attrsStr += \' type="submit"\';\r\n                    return new Emt(\'button\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLTextAreaElement}\r\n                 */\r\n                TEXTAREA: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'textarea\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLAnchorElement}\r\n                 */\r\n                ANCHOR: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'a\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLUListElement}\r\n                 */\r\n                ULIST: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'ulist\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLLIElement}\r\n                 */\r\n                LI: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'li\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLHeadingElement}\r\n                 */\r\n                HEADING: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'heading\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLImageElement}\r\n                 */\r\n                IMAGE: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'image\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLFormElement}\r\n                 */\r\n                FORM: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'form\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLObjectElement}\r\n                 */\r\n                OBJECT: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'object\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLVideoElement}\r\n                 */\r\n                VIDEO: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'video\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLCanvasElement}\r\n                 */\r\n                CANVAS: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'canvas\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLAudioElement}\r\n                 */\r\n                AUDIO: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'audio\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLBRElement}\r\n                 */\r\n                BR: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'br\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLHRElement}\r\n                 */\r\n                HR: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'hr\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLParagraphElement}\r\n                 */\r\n                PARAGRAPH: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'p\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLMenuElement}\r\n                 */\r\n                MENU: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'menu\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLHeadElement}\r\n                 */\r\n                HEAD: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'head\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLBodyElement}\r\n                 */\r\n                BODY: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'body\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLStyleElement}\r\n                 */\r\n                STYLE: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'style\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLScriptElement}\r\n                 */\r\n                SCRIPT: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'script\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLMetaElement}\r\n                 */\r\n                META: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'meta\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLTitleElement}\r\n                 */\r\n                TITLE: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'title\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLDataElement}\r\n                 */\r\n                DATA: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'data\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLTemplateElement}\r\n                 */\r\n                TEMPLATE: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'template\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLDataListElement}\r\n                 */\r\n                DATALIST: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'datalist\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLMeterElement}\r\n                 */\r\n                METER: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'meter\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLOutputElement}\r\n                 */\r\n                OUTPUT: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'output\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLProgressElement}\r\n                 */\r\n                PROGRESS: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'progress\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLDetailsElement}\r\n                 */\r\n                DETAILS: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'details\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /** @returns  {HTMLTableElement & {initResize:function():void }} */\r\n                TABLE: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    let table = new Emt(\'table\', attrsStr, textContent, prototypeMap);\r\n                    let _handle = {\r\n                        initResize: function () {\r\n                            kl.HTML.lib.tableCellResize.init();\r\n                            table.classList.add(\'kl-table\');\r\n                            let ths = Object.values(kl.getValByPath(table, \'tHead.rows.0.cells\', {}));\r\n                            ths.forEach(th => {\r\n                                if (th.resizer === undefined) {\r\n                                    th.resizer = kl.HTML.DIV(\'class="kl-cell-resizer"\');\r\n                                    th.addNodes([th.resizer]);\r\n                                    th.resizer.addEventListener(\'mousedown\', function (e) {\r\n                                        //  kl.log(\'mouse mousedown\');\r\n                                        kl.HTML.lib.tableCellResize.isResizing = true;\r\n                                        kl.HTML.lib.tableCellResize.currentResizer = e.target;\r\n                                        kl.HTML.lib.tableCellResize.startX = e.clientX;\r\n                                        kl.HTML.lib.tableCellResize.startWidth = parseInt(window.getComputedStyle(kl.HTML.lib.tableCellResize.currentResizer.parentElement).width, 10);\r\n                                        e.preventDefault();\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    };\r\n                    table = Object.assign(table, _handle);\r\n                    return table;\r\n                },\r\n                /**\r\n                 @return {HTMLTableSectionElement}\r\n                 */\r\n                TABLESECTION: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'tablesection\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLTableRowElement}\r\n                 */\r\n                TABLEROW: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'tablerow\', attrsStr, textContent, prototypeMap);\r\n                },\r\n                /**\r\n                 @return {HTMLTableCellElement}\r\n                 */\r\n                TABLECELL: function (attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n                    return new Emt(\'tablecell\', attrsStr, textContent, prototypeMap);\r\n                },\r\n\r\n            },\r\n\r\n\r\n        };\r\n\r\n        Object.defineProperty(kl, \'_log\', {\r\n            set: function (v) {\r\n                let enable_fns = [];\r\n                if (v === true) {\r\n                    enable_fns = [\'log\', \'warn\', \'error\'];\r\n                } else if (typeof v === \'string\') {\r\n                    enable_fns = v.split(\',\');\r\n                } else if (Array.isArray(v)) {\r\n                    enable_fns = v;\r\n                }\r\n                [\'log\', \'warn\', \'error\'].forEach(function (fn_str) {\r\n                    if (enable_fns.indexOf(fn_str) >= 0) {\r\n                        kl[fn_str] = kl[\'__\' + fn_str];\r\n                    } else {\r\n                        kl[fn_str] = function () {\r\n                        };\r\n                    }\r\n                });\r\n                return kl;\r\n            },\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    if (window.kl === undefined) {\r\n        window.kl = kl;\r\n    }\r\n\r\n\r\n    kl.log(\'loaded hammer.js\');\r\n}\r\n\r\n/**\r\n *\r\n * @param tagName\r\n * @param attrsStr\r\n * @param textContent\r\n * @param prototypeMap\r\n * @returns {HTMLElement }\r\n * @constructor\r\n */\r\nfunction Emt(tagName, attrsStr = \'\', textContent = \'\', prototypeMap = {}) {\r\n    let ele = document.createElement(tagName);\r\n    if (typeof attrsStr === \'string\') {\r\n        ele.setAttrsByStr(attrsStr, textContent || \'\');\r\n    }\r\n    if (typeof prototypeMap === \'object\') {\r\n        ele.setPros(prototypeMap);\r\n    }\r\n    return ele;\r\n}\r\n\r\n\r\nHTMLElement.prototype.addNode = function () {\r\n    let self = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        if (typeof arguments[i] !== \'string\') {\r\n            this.appendChild(arguments[i]);\r\n            arguments[i].boss = self;\r\n            arguments[i].parent = self;\r\n            if (typeof arguments[i + 1] === \'string\') {\r\n                if (arguments[i + 1]) self[arguments[i + 1]] = arguments[i];\r\n            }\r\n        }\r\n    }\r\n    return self;\r\n};\r\n\r\nHTMLElement.prototype.addNodes = function (nodes) {\r\n    let self = this;\r\n    if (!Array.isArray(nodes)) {\r\n        nodes = arguments;\r\n    }\r\n    nodes.forEach((node) => {\r\n        if (typeof node === \'string\') {\r\n            self.innerHTML += node;\r\n        } else if (node === false) {\r\n            //\r\n        } else {\r\n            node.boss = self;\r\n            self.appendChild(node);\r\n            if (node.eleName) {\r\n                self[node.eleName] = node;\r\n                if (node.eleParent) {\r\n                    node.eleParent [node.eleName] = node;\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return self;\r\n};\r\n\r\nHTMLElement.prototype.setStyle = function (configs) {\r\n    for (let attr in configs) {\r\n        this.style[attr] = configs[attr];\r\n    }\r\n    return this;\r\n};\r\nHTMLElement.prototype.setPros = function (configs) {\r\n    for (let attr in configs) {\r\n        this[attr] = configs[attr];\r\n    }\r\n    return this;\r\n};\r\n/**\r\n * 设置句柄及索引\r\n * @param {Object} index_handler\r\n * @param index_name\r\n * @returns {HTMLElement}\r\n */\r\nHTMLElement.prototype.setIndexHandler = function (index_handler, index_name) {\r\n    index_handler[index_name] = this;\r\n    this.indexHandler = index_handler;\r\n    return this;\r\n};\r\nHTMLElement.prototype.setAttrs = function (configs, isAddPrototype = false) {\r\n    for (let attr in configs) {\r\n        this.setAttribute(attr, configs[attr]);\r\n    }\r\n    if (isAddPrototype) {\r\n        for (let attr in configs) {\r\n            this[attr] = configs[attr];\r\n        }\r\n    }\r\n    return this;\r\n};\r\n//必须是双引号的\r\nHTMLElement.prototype.setAttrsByStr = function (raw_attrs_str, textContent) {\r\n    let tmp_ar = raw_attrs_str.replace(/=\\s?"\\s?/g, \'=\').replace(/"\\s+/g, \'" \').replace(/\\s?:\\s?/g, \':\').split(\'" \');\r\n    for (let ar_i = 0; ar_i < tmp_ar.length; ar_i++) {\r\n        let tmp_str = tmp_ar[ar_i];\r\n        let tmp_ar2 = tmp_str.split(\'=\');\r\n        if (tmp_ar2.length === 2) {\r\n            this.setAttribute(tmp_ar2[0].replace(/\\s/g, \'\'), tmp_ar2[1].replace(/(^\\s)|(\\s$)|"/g, \'\'));\r\n        }\r\n    }\r\n    if (typeof textContent === \'string\') {\r\n        this.textContent = textContent;\r\n    }\r\n    return this;\r\n};\r\n\r\nHTMLElement.prototype.setEventListener = function (event, fn) {\r\n    this.addEventListener(event, fn);\r\n    return this;\r\n};\r\nHTMLElement.prototype.bindEvent = function (event, fn) {\r\n    this.addEventListener(event, fn);\r\n    return this;\r\n};\r\n/**\r\n * 获取父元素\r\n * @param deep\r\n * @return {HTMLElement[]|*[]}\r\n */\r\nHTMLElement.prototype.getParentElements = function (deep) {\r\n    deep = deep || 10;\r\n    let parentELements = [];\r\n    let cur = this;\r\n    for (let i = 0; i < deep; i++) {\r\n        if (cur.parentElement) {\r\n            parentELements.push(cur.parentElement);\r\n            cur = cur.parentElement;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return parentELements;\r\n};\r\n/** 获取一个父元素\r\n * return {HTMLElement|*|false}\r\n * */\r\nHTMLElement.prototype.filterOneParentElement = function (filterFn, deep) {\r\n    deep = deep || 10;\r\n    let cur = this;\r\n    let match = false;\r\n    for (let i = 0; i < deep; i++) {\r\n        if (cur.parentElement) {\r\n            if (filterFn(cur) === true) {\r\n                match = cur;\r\n                break;\r\n            }\r\n            cur = cur.parentElement;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return match;\r\n};\r\n\r\n/**\r\n *\r\n * @param opts\r\n let opts = {\r\n path: \'premit.startTime\',\r\n domData: domData\r\n }\r\n * @returns {HTMLElement}\r\n */\r\nHTMLElement.prototype.bindData = function (opts) {\r\n    opts.ele = this;\r\n    opts.domData.bindData(opts);\r\n    return this;\r\n};\r\n\r\n\r\nHTMLElement.prototype.toggleClassList = function (class_name, is_add) {\r\n    if (typeof is_add === \'undefined\') {\r\n        this.classList.toggle(class_name);\r\n    } else if (is_add) {\r\n        this.classList.add(class_name);\r\n    } else {\r\n        this.classList.remove(class_name);\r\n    }\r\n    return this;\r\n};\r\n\r\nHTMLElement.prototype.select_item_vals = [];\r\nHTMLElement.prototype.select_item_eles = [];\r\n\r\nHTMLElement.prototype.addSelectItem = function (val, text, is_default) {\r\n    let self = this;\r\n    if (self.tagName === \'SELECT\') {\r\n        if (self.select_item_vals.indexOf(val) === -1) {\r\n            self.select_item_vals.push(val);\r\n            let opt = new Option(text, val);\r\n            opt.is_default = is_default;\r\n            opt.val = val;\r\n            self.select_item_eles.push();\r\n            self.add(opt);\r\n            if (is_default) {\r\n                self.value = val;\r\n            }\r\n        }\r\n    } else {\r\n        kl.log(\'调用错误，非select 不能使用 addSelectItem 方法\');\r\n    }\r\n    return self;\r\n};\r\n/**\r\n *\r\n * @param list [ {val:xx,text:xx,is_default:true/false} ]\r\n * @returns {HTMLElement}\r\n */\r\nHTMLElement.prototype.addSelectItemList = function (list) {\r\n    let self = this;\r\n    if (typeof list.forEach === \'function\') {\r\n        list.forEach(function (info) {\r\n            self.addSelectItem(info.val || \'\', info.text || \'\', info.is_default || \'\');\r\n        });\r\n    }\r\n    return this;\r\n};\r\nHTMLElement.prototype.clearSelectItems = function (keep_default) {\r\n    let self = this;\r\n    let index0 = 0;\r\n    for (let i in self.select_item_eles) {\r\n        if (keep_default === true && self.select_item_eles[index0].is_default === true) {\r\n            kl.log(\'保留\', i, index0, self.select_item_eles[index0]);\r\n            index0 = index0 + 1;\r\n        }\r\n        self.select_item_eles[index0].remove();\r\n    }\r\n    if (self.select_item_eles.length > 0) {\r\n        if (keep_default === true) {\r\n            self.select_item_vals = [self.select_item_eles[0].val];\r\n        } else {\r\n            self.select_item_vals = [];\r\n        }\r\n    }\r\n\r\n};\r\n\r\nHTMLElement.prototype.removeAllChildNodes = function () {\r\n    let es = Object.values(this.children);\r\n    es.forEach((e) => {\r\n        e.remove();\r\n    });\r\n};\r\n\r\nHTMLSelectElement.prototype.setItems = function (items, selected_key) {\r\n    let self = this;\r\n    if (Array.isArray(items)) {\r\n        items.forEach(function (item) {\r\n            self.add(new Option(item.text, item.val));\r\n        });\r\n    }\r\n    if (selected_key !== undefined) {\r\n        self.value = selected_key;\r\n    }\r\n    return self;\r\n\r\n};\r\n\r\nObject.defineProperty(HTMLSelectElement.prototype, "setItems", {enumerable: false,});\r\n/** *\r\n * @param items\r\n * @return {HTMLSelectElement}\r\n */\r\nHTMLSelectElement.prototype.appendItems = function (items) {\r\n    let self = this;\r\n    if (Array.isArray(items)) {\r\n        items.forEach(function (item) {\r\n            self.add(new Option(item.text, item.val));\r\n        });\r\n    }\r\n    return self;\r\n};\r\nObject.defineProperty(HTMLSelectElement.prototype, "appendItems", {enumerable: false,});\r\n\r\nHTMLDivElement.prototype.initElementInterface = function () {\r\n    let self = this;\r\n    let htmlInterfaceMap = {\r\n        value: {},\r\n        text: {},\r\n    };\r\n    if (typeof self.value === "object") {\r\n        for (const [k, inputElement] of Object.entries(self.value)) {\r\n            Object.defineProperty(self, k, {\r\n                set: function (v) {\r\n                    inputElement.value = v;\r\n                    htmlInterfaceMap.value[k] = inputElement;\r\n                    return self;\r\n                },\r\n                get: function () {\r\n                    return htmlInterfaceMap.value[k];\r\n                },\r\n            });\r\n        }\r\n    }\r\n    if (typeof self.text === "object") {\r\n        for (const [k, htmlElement] of Object.entries(self.text)) {\r\n            Object.defineProperty(self, k, {\r\n                set: function (v) {\r\n                    htmlElement.textContent = v;\r\n                    htmlInterfaceMap.text[k] = v;\r\n                    return self;\r\n                },\r\n                get: function () {\r\n                    return htmlInterfaceMap.text[k].toString();\r\n                },\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n\r\n var hero = {\r\n fit: function() {\r\n kl.log(\'普通攻击\');\r\n }\r\n }\r\n\r\n var fit2 = function () {\r\n kl.log(\'fit2\')\r\n }\r\n var hero1 = Object.create(hero);\r\n\r\n hero1.fit = hero1.fit.appendAfterFunction(fit2)\r\n hero1.fit()\r\n\r\n 结果:\r\n init.js:1 普通攻击\r\n init.js:1 fit2\r\n\r\n\r\n * @param afterfn\r\n * @returns {function(): *}\r\n */\r\nFunction.prototype.appendAfterFunction = function (afterfn) {\r\n    let _self = this;\r\n    return function () {\r\n        let ret = _self.apply(this, arguments);\r\n        afterfn.apply(this, arguments);\r\n        return ret;\r\n    };\r\n};\r\n\r\n\r\nfunction domLoaded(fn) {\r\n    document.addEventListener(\'DOMContentLoaded\', function () {\r\n        console.log(\'ready 1\');\r\n        fn();\r\n    });\r\n}\r\n\n//  /data/codes/advanced/frontend/web/static/js/hammer/kl-hammer.js <--\n\n// --> /data/codes/advanced/frontend/web/static/js/tampermonkey/footer-tool-bar-base.js\n"use strict";\r\n/*jshint esversion: 6 */\r\n/*globals document,console,window,Emt,kl,CustomEvent,top */\r\n/** 网页工具 基础方法库&初始化 */\r\nif (window !== top) {\r\n    //alert(\'在iframe中\');\r\n    console.warn(\'kl-Assembly in iframe\', window, document.location.href);\r\n    // return false;\r\n} else {\r\n    window.klAssembly = {\r\n        intervalSwitch: true,\r\n        intervalSearchSwith: true,\r\n        blackThemeStyleState: window.localStorage.getItem(\'window.klAssembly.blackThemeStyleState\') === \'true\',\r\n        question: {\r\n            title: false, detail: false, tagNames: false\r\n        },\r\n        keyStateMap: {\r\n            ctrlKey: false,\r\n            altKey: false,\r\n            shiftKey: false,\r\n        },\r\n        log: function () {\r\n        },\r\n        warn: function (msg) {\r\n        },\r\n        advWarn: function (key, msg, fontSize) {\r\n            if (key) {\r\n                let times_n = 0;\r\n\r\n                let style_str = \'\';\r\n                if (fontSize) {\r\n                    style_str = "style=\'font-size:${fontSize}em;\'";\r\n                }\r\n                if (window.klAssembly.msgBoxDiv[key]) {\r\n                    times_n = window.klAssembly.msgBoxDiv[key].times_n + 1;\r\n                    window.klAssembly.msgBoxDiv[key].remove();\r\n                }\r\n                if (!msg) {\r\n                    console.error(\'xxxx\');\r\n                    console.trace();\r\n                }\r\n                window.klAssembly.msgBoxDiv[key] = new Emt(\'span\', `${style_str}`, (new Date()).toLocaleTimeString() + `/${times_n}:${msg}`);\r\n                window.klAssembly.msgBoxDiv[key].times_n = times_n;\r\n                console.log(   window.klAssembly.msgBoxDiv,   window.klAssembly.msgBoxDiv.firstElementChild);\r\n                window.klAssembly.msgBoxDiv.firstElementChild.firstElementChild.append(window.klAssembly.msgBoxDiv[key]);\r\n            } else {\r\n                window.klAssembly.msgBoxDiv.firstElementChild.firstElementChild.append(new Emt(\'span\', ``, (new Date()).toLocaleTimeString() + `/:${msg}`));\r\n            }\r\n        },\r\n        error: function () {\r\n        },\r\n        alertMsg: function (msg) {\r\n            window.alert(`alert msg 失败，方法未覆写:${msg}`);\r\n        },\r\n        swithToBlackTheme: function () {\r\n            window.alert(`切换至暗黑模式失败,方法未覆写`);\r\n        },\r\n        exitBlackTheme: function () {\r\n            window.alert(`退出暗黑模式失败,方法未覆写`);\r\n        },\r\n\r\n        toggleImgToGray: function () {\r\n            window.alert(`图片转灰,方法未覆写`);\r\n        },\r\n\r\n\r\n        appendToolBaseStyleElement: function () {\r\n            window.alert(`初始化通用工具样式失败,方法未覆写`);\r\n        },\r\n\r\n        initToolBase: function () {\r\n            window.alert(`初始化通用工具事件失败,方法未覆写`);\r\n        },\r\n        msgWindow: {\r\n            shutdownCount: 0,\r\n            msgDiv: new Emt(\'div\', \'class="msg"\', \'xxx\'),\r\n            background: new Emt(\'div\', \'class="kl_modal_background hide"\'),\r\n            showMsg: (msg, seconds) => {\r\n                window.klAssembly.msgWindow.msgDiv.textContent = msg;\r\n                window.klAssembly.msgWindow.shutdownCount = seconds * 10;\r\n            }\r\n        },\r\n        createModalDiv: () => {\r\n            let modalDiv = kl.HTML.DIV(\'class="kl_modal_background hide"\');\r\n            let modal = {\r\n                containerDiv: new Emt(\'div\', \'class="modal_container"\'),\r\n                titleDiv: new Emt(\'div\', \'class="modal_title"\'),\r\n                minBtn: new Emt(\'button\', \'type="button" class="modal_min_btn"\', \'➖\'),\r\n                closeBtn: new Emt(\'button\', \'type="button" class="modal_close_btn"\', \'❌\'),\r\n                bodyDiv: new Emt(\'div\', \'class="modal_body"\'),\r\n                barRevertBtn: false,\r\n                setTitle: (title, isElement) => {\r\n                    if (isElement) {\r\n                        if (modal.titleDiv.firstElementChild) {\r\n                            modal.titleDiv.firstElementChild.remove();\r\n                        }\r\n                        modal.titleDiv.addNode(title);\r\n                    } else {\r\n                        modal.titleDiv.textContent = title;\r\n                    }\r\n                    return modal;\r\n                },\r\n                addContents: (contentElements) => {\r\n                    modal.bodyDiv.addNodes(contentElements);\r\n                    return modal;\r\n                },\r\n                clearContents: () => {\r\n                    Object.values(modal.bodyDiv.childNodes).forEach((childNode) => {\r\n                        childNode.remove();\r\n                    });\r\n                },\r\n                show: () => {\r\n                    modalDiv.classList.remove(\'hide\');\r\n                },\r\n                hide: () => {\r\n                    modalDiv.classList.add(\'hide\');\r\n                },\r\n            };\r\n            document.body.append(\r\n                modalDiv.addNodes([\r\n                    modal.containerDiv.addNodes([\r\n                        new Emt(\'div\', \'class="modal_top"\').addNodes([\r\n                            modal.titleDiv, modal.minBtn, modal.closeBtn\r\n                        ]),\r\n                        modal.bodyDiv\r\n                    ]),\r\n                ])\r\n            );\r\n\r\n\r\n            modal.closeBtn.addEventListener(\'click\', () => {\r\n                modal.hide();\r\n                if (modal.barRevertBtn !== false) {\r\n                    modal.barRevertBtn.remove();\r\n                    delete modal.barRevertBtn;\r\n                    modal.barRevertBtn = false;\r\n                }\r\n            });\r\n            modal.minBtn.addEventListener(\'click\', () => {\r\n                if (modal.barRevertBtn === false) {\r\n                    modal.barRevertBtn = window.klAssembly.addOptBtn(modal.titleDiv.textContent);\r\n                    modal.barRevertBtn.addEventListener(\'click\', () => {\r\n                        modal.show();\r\n                    });\r\n                }\r\n                modal.hide();\r\n            });\r\n            modalDiv = Object.assign(modalDiv, modal);\r\n\r\n            return modalDiv;\r\n        },\r\n        toolbarDiv: new Emt(\'div\', \' class="kl_tool_bar_div" \'),\r\n        toolbarOptsDiv: new Emt(\'div\', \' class="kl_tool_bar_opts_div hide" \'),\r\n        //toolbarOptDivsDiv: new Emt(\'div\', \' class="kl_tool_bar_opt_divs_div" \'),\r\n        toolbarOptDivsDiv: new Emt(\'div\', \' class="kl_tool_bar_opt_divs_container" \'),\r\n        msgBoxDiv: new Emt(\'div\', \' class="kl-tool-msg hide" \').addNodes([\r\n            new Emt(\'div\', \'class="kl-tool-msgs-outer"\').addNodes([\r\n                new Emt(\'div\', \'class="kl-tool-msgs"\')\r\n            ]),\r\n        ]),\r\n        toggle_Theme_Btn: false,\r\n        toggle_Gray_Btn: false,\r\n        deleleSelf_Btn: false,\r\n        modal_toggleBox: false,\r\n        hideOpts: () => {\r\n            window.klAssembly.toolbarOptsDiv.classList.add(\'hide\');\r\n            window.klAssembly.msgBoxDiv.classList.add(\'hide\');\r\n        },\r\n        showOpts: () => {\r\n            window.klAssembly.toolbarOptsDiv.classList.remove(\'hide\');\r\n            window.klAssembly.msgBoxDiv.classList.remove(\'hide\');\r\n\r\n        },\r\n        addOptBtn: (btnText) => {\r\n            let btn = new Emt(\'button\', \'type="button" class="kl_tool_bar_btn"\', btnText);\r\n            window.klAssembly.toolbarOptsDiv.addNodes([btn]);\r\n            btn.setSelected = () => {\r\n                window.klAssembly.toggle_Theme_Btn.classList.remove(\'kl_tool_bar_unselect_state\');\r\n            };\r\n            btn.setNonSelected = () => {\r\n                window.klAssembly.toggle_Theme_Btn.classList.add(\'kl_tool_bar_unselect_state\');\r\n            };\r\n\r\n            return btn;\r\n        },\r\n        addOptDiv: () => {\r\n            let div = new Emt(\'div\', \' class="kl_tool_bar_opt_div"\', \'\');\r\n            window.klAssembly.toolbarOptDivsDiv.addNodes([div]);\r\n            return div;\r\n        },\r\n        trimAttrs: (node, keepAttrNames) => {\r\n            if (node.nodeName === \'#text\') {\r\n                console.log(\'text\', node, node.nodeName);\r\n                return false;\r\n            }\r\n            if (node.tagName === \'NOSCRIPT\') {\r\n                node.remove();\r\n                return false;\r\n            }\r\n            if (node.attributes === undefined) {\r\n                console.log(\'node.attributes\', node.attributes, node);\r\n                return false;\r\n            }\r\n\r\n            let attrNames = Object.values(node.attributes || []).map((v) => {\r\n                return v.nodeName;\r\n            });\r\n            console.log(node, node.tagName, attrNames, node.innerHTML);\r\n            attrNames.forEach((attrName) => {\r\n                if (keepAttrNames.indexOf(attrName) === -1) {\r\n                    node.removeAttribute(attrName);\r\n                    // console.log(`attrName: ${attrName}`, attrName, \'x\');\r\n                }\r\n            });\r\n            // console.log(node, node.innerHTML, \'xxxx\');\r\n        },\r\n\r\n        trimAllNodeAttrs: (node, keepAttrNames) => {\r\n            // console.log(\'>>>\', node, node.innerHTML);\r\n            let tmp_node = node.cloneNode(true);\r\n            console.log([node, tmp_node]);\r\n            let res = window.klAssembly.trimAttrs(tmp_node, keepAttrNames);\r\n\r\n            Object.values(res === false ? [] : tmp_node.getElementsByTagName("*")).forEach((subNode) => {\r\n                console.log(\'subNode\', subNode);\r\n                window.klAssembly.trimAttrs(subNode, keepAttrNames);\r\n            });\r\n            Object.values(res === false ? [] : tmp_node.getElementsByTagName("svg")).forEach((subNode) => {\r\n                if (subNode.outerHTML === \'<svg><path></path></svg>\') {\r\n                    subNode.remove();\r\n                }\r\n            });\r\n            // console.log(node, node.innerHTML,\'xxxx\');\r\n            //   console.log(node, node.innerHTML, \'<<<\');\r\n            return tmp_node;\r\n        },\r\n        getSelectInnerHtml: () => {\r\n            let selectedStr;\r\n            let t = window.getSelection().getRangeAt(0).extractContents();\r\n            //Object.values(t.childNodes).map(node=>{return node.innerHTML;}).join(\'\\n\');\r\n            console.log(window.getSelection(), window.klAssembly.question);\r\n            selectedStr = Object.values(t.childNodes).map(node => {\r\n                // let tmp_node = node.cloneNode(true);\r\n                //  console.log([\'node\', node, tmp_node]);\r\n                return window.klAssembly.trimAllNodeAttrs(node, [\'style\', \'src\', \'href\']).innerHTML;\r\n            }).join(\'\\n\');\r\n            console.log(selectedStr);\r\n            //throw \'xxxx\';\r\n            return selectedStr;\r\n        },\r\n        getSelectTextOnly: () => {\r\n            let selectedStr = window.getSelection().toString();\r\n            console.log(window.getSelection(), selectedStr, window.klAssembly.question);\r\n            return selectedStr;\r\n        },\r\n        //checkbox+span 并且\r\n        createSwithCheckboxSpan: (text, checkedFun, uncheckedFun) => {\r\n            let checkbox = new Emt(\'input\', \'type="checkbox" class="float_left"\');\r\n            checkbox.addEventListener(\'change\', () => {\r\n                if (checkbox.checked) {\r\n                    checkedFun();\r\n                } else {\r\n                    uncheckedFun();\r\n                }\r\n            });\r\n            return new Emt(\'div\', \'class="modal_body_row"\').addNodes([\r\n                new Emt(\'label\', \'class="float_left kl_check"\').addNodes([\r\n                    checkbox,\r\n                    new Emt(\'span\', \'class="float_left"\', text),\r\n                ])\r\n            ]);\r\n        },\r\n        createRadioList: (param) => {\r\n            let opt = param || {};\r\n            opt.items = opt.items || [];\r\n            let groupDiv = new Emt(\'div\', \'class="kl-radio-list"\');\r\n\r\n            let _handle = {\r\n                val: false,\r\n                checkboxs: [],\r\n                toggleVal: () => {\r\n                    _handle.checkboxs.forEach((checkbox) => {\r\n                        checkbox.checked = checkbox.val === _handle.val;\r\n                    });\r\n                },\r\n                setItems: (items) => {\r\n                    groupDiv.removeAllChildNodes();\r\n                    _handle.checkboxs = [];\r\n                    items.forEach((item) => {\r\n                        let chekcbox = new Emt(\'input\', \'type="checkbox" class=""\', \'\', {val: item.val});\r\n                        _handle.checkboxs.push(chekcbox);\r\n                        groupDiv.addNodes([\r\n                            new Emt(\'label\', \'class="\').addNodes([\r\n                                chekcbox,\r\n                                new Emt(\'span\', \'\', item.text),\r\n                            ])\r\n                        ]);\r\n                        chekcbox.addEventListener(\'change\', (e) => {\r\n                            e.stopPropagation();//\r\n                            groupDiv.value = chekcbox.val;\r\n                            groupDiv.dispatchEvent(new Event(\'change\'));\r\n                            // e.stopPropagation();\r\n                            // e.preventDefault();\r\n                        });\r\n                    });\r\n                },\r\n            };\r\n\r\n\r\n            Object.defineProperty(_handle, \'items\', {\r\n                set: function (v) {\r\n                    _handle.setItems(v);\r\n                    return groupDiv;\r\n                },\r\n                get: function () {\r\n                    return _handle.items;\r\n                },\r\n            });\r\n\r\n            Object.defineProperty(groupDiv, \'value\', {\r\n                set: function (v) {\r\n                    _handle.val = v;\r\n                    _handle.toggleVal();\r\n                    return groupDiv;\r\n                },\r\n                get: function () {\r\n                    return _handle.val;\r\n                },\r\n            });\r\n            groupDiv = Object.assign(groupDiv, _handle);\r\n            if (Array.isArray(opt.items)) {\r\n                groupDiv.setItems(opt.items);\r\n            }\r\n            if (opt.value !== undefined) {\r\n                groupDiv.value = opt.value;\r\n            }\r\n            return groupDiv;\r\n        },\r\n    };\r\n    if (window.localStorage.getItem(\'kl_debug\') === \'true\') {\r\n        window.klAssembly.log = console.log;\r\n        window.klAssembly.warn = console.warn;\r\n        window.klAssembly.error = console.error;\r\n    }\r\n\r\n    window.klAssembly.toggle_Theme_Btn = window.klAssembly.addOptBtn(\'暗黑\');\r\n    window.klAssembly.toggle_Gray_Btn = window.klAssembly.addOptBtn(\'灰图\');\r\n    window.klAssembly.deleleSelf_Btn = window.klAssembly.addOptBtn(\'X\');\r\n\r\n\r\n//window.klAssembly.modal_toggleBox = window.klAssembly.addOptDiv();\r\n\r\n    window.setInterval(() => {\r\n        if (window.klAssembly.msgWindow.shutdownCount > 0) {\r\n            window.klAssembly.msgWindow.shutdownCount = window.klAssembly.msgWindow.shutdownCount - 1;\r\n            if (window.klAssembly.msgWindow.shutdownCount === 0) {\r\n                window.klAssembly.msgWindow.background.classList.add(\'hide\');\r\n            } else {\r\n                window.klAssembly.msgWindow.background.classList.remove(\'hide\');\r\n            }\r\n        }\r\n    }, 100);\r\n    document.body.append(window.klAssembly.msgWindow.background.addNodes([window.klAssembly.msgWindow.msgDiv]));\r\n\r\n    window.klAssembly.showMsg = function (msg) {\r\n        kl.log(msg);\r\n        window.klAssembly.msgWindow.showMsg(msg, 0.5);\r\n    };\r\n    window.klAssembly.alertMsg = function (msg) {\r\n        kl.log(msg);\r\n        window.klAssembly.msgWindow.showMsg(msg, 0.5);\r\n    };\r\n\r\n\r\n    let isInBlackTheme = () => {\r\n        return document.body.className.indexOf(\'kl_black_theme_style\') !== -1;\r\n    };\r\n\r\n    window.klAssembly.swithToBlackTheme = (flag) => {\r\n        console.log(`swithToBlackTheme ${flag}`);\r\n        window.klAssembly.toggle_Theme_Btn.setSelected();\r\n        document.body.classList.add(\'kl_black_theme_style\');\r\n        if (window.klAssembly.keyStateMap.ctrlKey === false) {\r\n            window.localStorage.setItem(\'window.klAssembly.blackThemeStyleState\', \'true\');\r\n        }\r\n        window.klAssembly.blackThemeStyleState = true;\r\n    };\r\n\r\n\r\n    window.klAssembly.exitBlackTheme = (flag) => {\r\n        console.log(`exitBlackTheme ${flag}`);\r\n        window.klAssembly.toggle_Theme_Btn.setNonSelected();\r\n        document.body.classList.remove(\'kl_black_theme_style\');\r\n        if (window.klAssembly.keyStateMap.ctrlKey === false) {\r\n            window.localStorage.setItem(\'window.klAssembly.blackThemeStyleState\', \'false\');\r\n        }\r\n        window.klAssembly.blackThemeStyleState = false;\r\n\r\n    };\r\n    window.klAssembly.toggleImgToGray = () => {\r\n        document.body.classList.toggle(\'kl_gray_img\');\r\n    };\r\n\r\n\r\n    window.klAssembly.appendToolBaseStyleElement = () => {\r\n        let classStr = document.body.getAttribute(\'class\');\r\n        document.body.setAttribute(\'class\', `${classStr} kl_black_theme_style`);\r\n        console.log(document.body.getAttribute(\'class\'));\r\n        if (kl.id(\'kl_tool_base_style_element\') === null) {\r\n            let s = new Emt(\'style\', \'id="kl_tool_base_style_element"\', \'\');\r\n            s.innerHTML = `\r\n    .kl_tool_bar_div {\r\n      all: initial;\r\n      * {\r\n        all: unset;\r\n      }\r\n    }\r\n    .kl_modal_background {\r\n     all: revert;      \r\n    }\r\n     .kl_modal_background * {\r\n        all: revert;\r\n     }\r\n    @media only screen  and (max-width: 1000px) {\r\n        .kl_tool_bar_div {\r\n            top: calc(100vh - 8em - 5px) !important;\r\n        }\r\n        \r\n       \r\n    }\r\n    .kl_black_theme_style *{   \r\n        background-color: rgba(43,43,43,1) !important;\r\n        color:rgb(135,135,135) !important;\r\n    }\r\n\r\n   \r\n    .kl_black_theme_style img,.kl_black_theme_style video,.kl_black_theme_style iframe{\r\n       opacity: 0.26;\r\n       filter:grayscale(100%) invert(100%);\r\n     }\r\n     .kl_black_theme_style.kl_gray_img img,.kl_black_theme_style.kl_gray_img video,.kl_black_theme_style.kl_gray_img iframe{\r\n       opacity: 0.5;\r\n       filter:grayscale(100%);\r\n     }\r\n    .kl_black_theme_style img:hover,.kl_black_theme_style video:hover,.kl_black_theme_style iframe:hover{\r\n       opacity: 1;\r\n       filter:grayscale(0%) invert(0%);\r\n    }\r\n  \r\n    .hide {\r\n        display:none !important;\r\n    }\r\n    .float_left{\r\n        display:block;\r\n        float:left;\r\n    }\r\n    .kl_tool_bar_div {    \r\n        position: fixed;\r\n        top:  calc(100vh - 3em - 5px);\r\n        left: 0;\r\n        margin-left: 15px;\r\n        color1: #FFF;\r\n        padding:0.5em;\r\n        background: #FFF !important;\r\n        z-index: 9999999;\r\n        font-weight: 900; \r\n    }\r\n    .kl_tool_bar_div>* {    \r\n       display:block  ;\r\n       float:left ;\r\n    }\r\n   \r\n    .kl_tool_bar_opts_div {    }\r\n    .kl_tool_bar_opts_div>* {   float:left; }\r\n    .kl_tool_bar_btn {    \r\n        //display:block;    \r\n        //float:left;    \r\n        background:#DDD;    \r\n        margin-left: 15px;\r\n        z-index: 9999999;\r\n    }\r\n    .kl_tool_opts_div_btn{\r\n        font-size1:3em;\r\n        border:1px solid #999;\r\n        margin-top1:-1em;\r\n        margin-left:1em;\r\n        background:#DDD;    \r\n        margin-left: 15px;\r\n        z-index: 9999999;\r\n    }\r\n    .kl_tool_bar_opt_divs_container{\r\n        position: fixed;\r\n        top: calc(100vh - 20em);\r\n        left: 2em;\r\n        height: auto;\r\n        width: 20em;\r\n        min-height: 1em;\r\n    }\r\n    .kl-tool-msg{\r\n    \r\n        position: fixed;\r\n    top: calc(100vh - 5em - 5px);\r\n    left: 0;\r\n    margin-left: 15px;\r\n    padding: 0.5em;\r\n    background: #FFF !important;\r\n    z-index: 9999999;\r\n    font-weight: 900;\r\n    \r\n            left: 2em;\r\n            height: 1em;\r\n            width: 20em;\r\n            min-height: 1em;        \r\n    }\r\n    .kl-tool-msgs-outer{\r\n            display:block;\r\n            float:left;       \r\n            width:100%;   \r\n            height:auto;\r\n            position: relative;\r\n    }\r\n    .kl-tool-msgs,.kl-tool-msgs>*{          \r\n            display:block;\r\n            float:left;       \r\n            width:100%;         \r\n    }\r\n    .kl-tool-msgs{\r\n            transform: translateY(-100%);       \r\n    }\r\n    .kl-tool-msgs>*{\r\n            text-shadow: 2px 0 #FFF,\r\n            -2px 0 #FFF,\r\n            0 2px #FFF,\r\n            0 -2px #FFF,\r\n            2px 2px #FFF,\r\n            -2px -2px #FFF,\r\n            2px -2px #FFF,\r\n            -2px 2px #FFF;               \r\n    }\r\n    .kl_tool_bar_opt_divs_div{\r\n        width:100%;\r\n    }\r\n    \r\n    .kl_tool_bar_opt_div{        \r\n        background:#DDD;      \r\n    }\r\n    .kl_tool_bar_unselect_state {    \r\n        text-decoration-line: line-through;\r\n        text-decoration-color: #F00;\r\n        /* text-decoration-style: double; */\r\n        text-decoration-thickness: 20%;\r\n    }\r\n    .kl_modal_background {\r\n        width:100%;\r\n        height:100%;\r\n        position:fixed;\r\n        left:0;\r\n        top:0;\r\n        z-index:999999;\r\n        background:#fefefe;\r\n    }\r\n    .kl_modal_background>.msg {\r\n        top:50%;\r\n        transform: translate(0, -50%);\r\n        position: relative;\r\n        width:100%;\r\n        text-align:center;\r\n    }\r\n    .kl_modal_background>.modal_container{\r\n        position: relative;\r\n        width: 80%;\r\n        margin: 0 auto;\r\n        margin-top: 2em;        \r\n        height: calc(100vh - 7em );\r\n        overflow-y: scroll;\r\n        overflow-x:hidden;\r\n    }\r\n    .kl_modal_background .modal_top{\r\n        display: flex;\r\n        border-bottom: 1px solid #000;\r\n        font-size: 1.5em;\r\n        padding-bottom: 1em;\r\n    }\r\n    .kl_modal_background .modal_top > button{\r\n        padding-left: 0.5em;\r\n        padding-right: 0.5em;\r\n        margin-left: 1em;\r\n    }\r\n    .modal_close_btn{\r\n        background:#000;\r\n    }\r\n     .modal_close_btn{\r\n    }\r\n    \r\n    \r\n    .kl_modal_background .modal_title{\r\n        flex-grow: 1;\r\n    }\r\n     .kl_modal_background .modal_body{\r\n        width:100%;\r\n        border:1px solid #000;\r\n    }\r\n    .modal_body .css_revert,.css_revert *{\r\n        all:revert !important;\r\n    }\r\n    .modal_body_row {\r\n        width:calc(100% - 2px - 1em);\r\n        height:2em;\r\n        line-height:1em;\r\n        font-size:2em;\r\n        border:1px solid #000;\r\n        padding:0.5em;\r\n    } \r\n    .kl_check>*:checked + * {\r\n        color: #FFF;\r\n        background-color: #000;\r\n    }\r\n    .modal_body_row .kl_check>*{\r\n        \r\n    }\r\n    .modal_body_row .kl_check>input[type="checkbox"]{\r\n        height:2em;\r\n        width:2em;\r\n    }\r\n    .modal_body_row_text_input{\r\n        width:100%;\r\n        resize: vertical;\r\n        min-height:2em;\r\n    } \r\n    .modal_body>div{\r\n        width:100%;\r\n        float:left;\r\n    }\r\n    .kl-radio-list , .kl-radio-list>*,.kl-checkbox-list , .kl-checkbox-list>*{\r\n        display:block;\r\n        float:left;\r\n    }\r\n    .kl-radio-list>label,  .kl-checkbox-list>label{\r\n        display:block;\r\n        float:left;\r\n        padding:0.5em;\r\n    }\r\n    .kl-radio-list>label>input[type="checkbox"],  .kl-checkbox-list>label>input[type="checkbox"]{\r\n        display:none;\r\n    }\r\n    .kl-radio-list input+span,  .kl-checkbox-list input+span{\r\n        background: #FFF !important;\r\n        color: #000 !important;\r\n    }\r\n     .kl-radio-list input:checked+span, .kl-checkbox-list input:checked+span{\r\n        background: #000 !important;\r\n        font-weight: 900;\r\n        color: #FFF !important;\r\n    }\r\n    `;\r\n            document.body.append(s);\r\n            console.log(\'----> 添加style element\');\r\n            if (window.klAssembly.blackThemeStyleState) {\r\n\r\n            } else {\r\n                window.klAssembly.exitBlackTheme(\'append css\');\r\n            }\r\n        }\r\n    };\r\n\r\n    window.klAssembly.initToolBase = function () {\r\n        if (window.klAssembly.isNeedBaseLib === false) {\r\n            return false;\r\n        }\r\n        console.log(\'初始化 工具 通用事件 \');\r\n        console.log(document.body.getAttribute(\'class\'));\r\n\r\n        //️↔️\r\n        let toggle_OptsDiv_Btn = new Emt(\'button\', \'type="button" class="kl_tool_opts_div_btn"\', `⚙️`);\r\n\r\n        //  console.log(window.localStorage.getItem(\'window.klAssembly.blackThemeStyleState\') !== \'false\');\r\n\r\n\r\n        document.body.append(window.klAssembly.msgBoxDiv,\r\n            window.klAssembly.toolbarDiv.addNodes([\r\n                toggle_OptsDiv_Btn,\r\n                window.klAssembly.toolbarOptsDiv.addNodes([\r\n                    // new Emt(\'div\', \' class="kl_tool_bar_opt_divs_container" \').addNodes([\r\n                    window.klAssembly.toolbarOptDivsDiv,\r\n                    //  ]),\r\n                    window.klAssembly.toggle_Theme_Btn,\r\n                    window.klAssembly.toggle_Gray_Btn,\r\n                ])\r\n            ]));\r\n        toggle_OptsDiv_Btn.addEventListener(\'click\', () => {\r\n            window.klAssembly.toolbarOptsDiv.classList.toggle(\'hide\');\r\n            window.klAssembly.msgBoxDiv.classList.toggle(\'hide\');\r\n\r\n        });\r\n\r\n        window.klAssembly.toggle_Theme_Btn.addEventListener(\'click\', function () {\r\n            window.klAssembly.blackThemeStyleState = !window.klAssembly.blackThemeStyleState;\r\n            if (window.klAssembly.blackThemeStyleState) {\r\n                window.klAssembly.swithToBlackTheme(\'click\');\r\n            } else {\r\n                window.klAssembly.exitBlackTheme(\'click\');\r\n            }\r\n        });\r\n        window.klAssembly.toggle_Gray_Btn.addEventListener(\'click\', function () {\r\n            window.klAssembly.toggleImgToGray();\r\n        });\r\n\r\n        window.klAssembly.deleleSelf_Btn.addEventListener(\'click\', () => {\r\n            window.klAssembly.toolbarDiv.remove();\r\n            window.klAssembly.msgBoxDiv.remove();\r\n\r\n        });\r\n\r\n        console.log(document.body.getAttribute(\'class\'));\r\n        /*\r\n        document.body.addEventListener("DOMSubtreeModified", function (event) {\r\n            // console.log(\'DOMSubtreeModified\', event.target);// event.target就是依次插入的DOM节点\r\n            // call_i++;\r\n            //window.klZhihu.domChangedTimesDiv.textContent = call_i.toString();\r\n\r\n            if (window.klAssembly.blackThemeStyleState === true && document.body.className.indexOf(\'kl_black_theme_style\') === -1) {\r\n                window.klAssembly.swithToBlackTheme(\'DOMSubtreeModified\');\r\n                Object.values(kl.xpathSearch(".//button[contains(@class,\'Modal-closeButton\')]")).forEach(btn => {\r\n                    btn.click();\r\n                });\r\n            }\r\n\r\n            if (window.klAssembly.blackThemeStyleState === false && document.body.className.indexOf(\'kl_black_theme_style\') !== -1) {\r\n                window.klAssembly.exitBlackTheme(\'DOMSubtreeModified\');\r\n            }\r\n\r\n\r\n        }, false);\r\n           */\r\n\r\n        // Firefox和Chrome早期版本中带有前缀\r\n        let MutationObserver = window.MutationObserver;\r\n// 创建观察者对象\r\n        let klObserver = new MutationObserver(function (mutations) {\r\n            if (window.klAssembly.blackThemeStyleState === true && document.body.className.indexOf(\'kl_black_theme_style\') === -1) {\r\n                window.klAssembly.swithToBlackTheme(\'DOMSubtreeModified\');\r\n                Object.values(kl.xpathSearch(".//button[contains(@class,\'Modal-closeButton\')]")).forEach(btn => {\r\n                    btn.click();\r\n                });\r\n            }\r\n\r\n            if (window.klAssembly.blackThemeStyleState === false && document.body.className.indexOf(\'kl_black_theme_style\') !== -1) {\r\n                window.klAssembly.exitBlackTheme(\'DOMSubtreeModified\');\r\n            }\r\n        });\r\n\r\n        klObserver.observe(document.body, {\r\n            //attributes: true,\r\n            childList: true,\r\n            //   characterData: true,\r\n            subtree: true\r\n        });\r\n\r\n        document.body.addEventListener(\'keydown\', function (e) {\r\n            let keyCode = e.key || e.which || e.charCode;\r\n            let ctrlKey = e.ctrlKey;\r\n            let altKey = e.altKey;\r\n            let shiftKey = e.shiftKey;\r\n            console.log(\'key down:\' + (ctrlKey ? \'yes\' : \'no\') + \' alt:\' + (altKey ? \'yes\' : \'no\') + \' shift:\' + (shiftKey ? \'yes\' : \'no\') + \'【\' + keyCode + \'】\');\r\n\r\n            window.klAssembly.keyStateMap = {\r\n                ctrlKey: e.ctrlKey,\r\n                altKey: e.altKey,\r\n                shiftKey: e.shiftKey,\r\n            };\r\n            if ((ctrlKey && shiftKey && keyCode === \'C\') || (ctrlKey && keyCode === \'b\')) {\r\n                //alert("组合键成功")\r\n                console.log(\'切换\');\r\n                window.klAssembly.toggle_Theme_Btn.dispatchEvent(new CustomEvent(\'click\'));\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener(\'keypress\', function (e) {\r\n            let keyCode = e.key || e.which || e.charCode;\r\n            let ctrlKey = e.ctrlKey;\r\n            let altKey = e.altKey;\r\n            let shiftKey = e.shiftKey;\r\n            // console.log(\'key press:\' + (ctrlKey ? \'yes\' : \'no\') + \' alt:\' + (altKey ? \'yes\' : \'no\') + \' shift:\' + (shiftKey ? \'yes\' : \'no\') + \'【\' + keyCode + \'】\');\r\n\r\n        });\r\n        document.body.addEventListener(\'keyup\', function (e) {\r\n            let keyCode = e.key || e.which || e.charCode;\r\n            let ctrlKey = e.ctrlKey;\r\n            let altKey = e.altKey;\r\n            let shiftKey = e.shiftKey;\r\n            console.log(\'key up:\' + (ctrlKey ? \'yes\' : \'no\') + \' alt:\' + (altKey ? \'yes\' : \'no\') + \' shift:\' + (shiftKey ? \'yes\' : \'no\') + \'【\' + keyCode + \'】\');\r\n            window.klAssembly.keyStateMap = {\r\n                ctrlKey: e.ctrlKey,\r\n                altKey: e.altKey,\r\n                shiftKey: e.shiftKey,\r\n            };\r\n        });\r\n\r\n\r\n    };\r\n    window.klAssembly.appendToolBaseStyleElement();\r\n    window.setTimeout(function () {\r\n        window.klAssembly.initToolBase();\r\n    }, 200);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n//  /data/codes/advanced/frontend/web/static/js/tampermonkey/footer-tool-bar-base.js <--\n\n// --> /data/codes/advanced/frontend/web/static/js/var/collection_tags.js\n\nwindow.collection_tags = ["\\u559c       \\u6709\\u542f\\u53d1\\/\\u6da8\\u89c1\\u8bc6",{"value":"\\u6709\\u542f\\u53d1","letterCn":"You_QiFa","letterEn":[""]},{"value":"\\u6da8\\u89c1\\u8bc6","letterCn":"Zhang_JianShi","letterEn":[""]},{"value":"\\u53cd\\u76f4\\u89c9","letterCn":"FanZhiJue","letterEn":[""]},{"value":"\\u918d\\u9190\\u704c\\u9876","letterCn":"TiHuGuanDing","letterEn":[""]},{"value":"\\u53e6\\u6709\\u660e\\u609f","letterCn":"LingYou_MingWu","letterEn":[""]},{"value":"\\u8a00\\u8f9e\\u7280\\u5229","letterCn":"YanCi_XiLi","letterEn":[""]},{"value":"\\u4e00\\u53e5\\u603c\\u6b7b","letterCn":"Yi_Ju_Dui_Si","letterEn":[""]},{"value":"\\u6587\\u7b14\\u4f18\\u7f8e","letterCn":"WenBi_YouMei","letterEn":[""]},{"value":"\\u89d2\\u5ea6\\u5201\\u94bb","letterCn":"JiaoDu_DiaoZuan","letterEn":[""]},{"value":"\\u503c\\u5f97\\u6df1\\u601d","letterCn":"ZhiDe_ShenSi","letterEn":[""]},{"value":"\\u793e\\u4f1a\\u89c2\\u5bdf","letterCn":"SheHui_GuanCha","letterEn":[""]},{"value":"\\u603b\\u7ed3\\u7cbe\\u8f9f","letterCn":"ZongJie_JingPi","letterEn":[""]},{"value":"\\u8fd8\\u80fd\\u8fd9\\u4e48\\u73a9?","letterCn":"HaiNengZheMeWan","letterEn":[""]},{"value":"\\u603c\\u7684\\u597d","letterCn":"DuiDeHao","letterEn":[""]},"\\u559c          \\u6210\\u957f\\/\\u8d44\\u6599\\u7c7b",{"value":"\\u6709\\u6536\\u85cf\\u4ef7\\u503c","letterCn":"You_ShouCang_JiaZhi","letterEn":[""]},{"value":"\\u59cb\\u4e8e\\u8db3\\u4e0b","letterCn":"ShiYuZuXia","letterEn":[""]},{"value":"\\u4ed6\\u5c71\\u4e4b\\u77f3","letterCn":"TaShanZhiShi","letterEn":[""]},{"value":"\\u53ef\\u4ee5\\u653b\\u7389","letterCn":"KeYiGongYu","letterEn":[""]},{"value":"\\u4ee5\\u524d\\u4e0d\\u5c51\\u4e00\\u987e\\u2014\\u2014\\u73b0\\u5728\\u75af\\u72c2\\u7b14\\u8bb0","letterCn":"QiQian_BuGuYiXie_XianZai_FengKuangBiJi","letterEn":["now"]},{"value":"\\u8dd1\\u9898\\u2014\\u2014\\u4f46\\u6709\\u7528","letterCn":"PaoTi_DanYouYong","letterEn":["but"]},{"value":"\\u89c2\\u70b9\\u504f\\u9887\\u2014\\u2014\\u8d44\\u6599\\u6709\\u4ef7\\u503c","letterCn":"GuanDian_PianPo_ZiLiao_YouJiaZhi","letterEn":["but"]},{"value":"\\u89c2\\u70b9\\u5783\\u573e\\u2014\\u2014\\u8d44\\u6599\\u6709\\u4ef7\\u503c","letterCn":"GuanDian_LaJi_ZiLiao_YouJiaZhi","letterEn":["but"]},{"value":"\\u5fc3\\u6709\\u621a\\u621a\\u7109","letterCn":"Xin_You_QiQiYan","letterEn":["me","too"]},"\\u6012",{"value":"\\u6c11\\u751f\\u591a\\u8270","letterCn":"","letterEn":[""]},{"value":"\\u65e0\\u803b\\u884c\\u5f84","letterCn":"","letterEn":[""]},{"value":"\\u72d7\\u4e1c\\u897f\\u540d\\u5355","letterCn":"Gou_DongXi_MingDan","letterEn":["dog","list"]},"\\u54c0        \\u6c89\\u91cd",{"value":"\\u53cd\\u601d\\u81ea\\u7701","letterCn":"FanSi_FanXing","letterEn":[""]},{"value":"\\u8840\\u6dcb\\u6dcb\\u4e8b\\u5b9e","letterCn":"XueLinLin_ShiShi","letterEn":[""]},{"value":"\\u8840\\u6dcb\\u6dcb\\u4ee3\\u4ef7","letterCn":"XueLinLin_DaiJia","letterEn":[""]},{"value":"\\u4e8b\\u5b9e\\u4e0d\\u8bb2\\u903b\\u8f91","letterCn":"ShiShi_Bu_Jiang_LuoJi","letterEn":[""]},{"value":"\\u65f6\\u4ee3\\u4e0d\\u540c\\u4e86","letterCn":"ShiDai_Bu_Tong_le","letterEn":[""]},{"value":"\\u5927\\u5bb6\\u90fd\\u4e00\\u6837(\\u4e2d\\u5916)","letterCn":"DaJia_DouYiYang_ZhongWai","letterEn":["Same"]},{"value":"\\u5927\\u5bb6\\u90fd\\u4e00\\u6837(\\u53e4\\u4eca)","letterCn":"DaJia_DouYiYang_GuJin","letterEn":["Same"]},{"value":"\\u5927\\u5bb6\\u90fd\\u4e00\\u6837(\\u4e2a\\u4eba)","letterCn":"DaJia_DouYiYang_GeRen","letterEn":["Same"]},{"value":"\\u987b\\u5f97\\u53cd\\u601d","letterCn":"ZhiDe_FanSi","letterEn":["Think"]},{"value":"\\u53cd\\u5e38\\uff0c\\u5f80\\u574f\\u5904\\u60f3","letterCn":"FanChang_HuaiChu_Xiang","letterEn":["Think"]},{"value":"\\u843d\\u4e0b\\u795e\\u575b","letterCn":"LuoXiaShenTan","letterEn":[true]},{"value":"\\u624e\\u5fc3\\u4e86","letterCn":"ZhaXinLe","letterEn":["heart","hit"]},{"value":"\\u6df1\\u6709\\u540c\\u611f","letterCn":"Shen_You_Tong_Gan","letterEn":[""]},{"value":"\\u6c11\\u751f\\u591a\\u8270","letterCn":"","letterEn":[""]},{"value":"\\u4eba\\u751f\\u767e\\u5473","letterCn":"RenSheng_BaiWei","letterEn":[""]},{"value":"\\u5fe0\\u4e8e\\u7406\\u60f3","letterCn":"MianDui_LiXiang","letterEn":[""]},{"value":"\\u9762\\u5bf9\\u73b0\\u5b9e","letterCn":"ZhongYu_XianShi","letterEn":[""]},{"value":"\\u6de1\\u6de1\\u7684\\u60b2\\u4f24","letterCn":"DanDan_De_BeiShang","letterEn":["sad"]},{"value":"\\u6328\\u4e86\\u56de\\u65cb\\u9556","letterCn":"HuiXuanBiao","letterEn":[""]},{"value":"\\u5e74\\u8f7b\\u65f6\\u5c04\\u51fa\\u7684\\u5b50\\u5f39","letterCn":"NianQing_Shi_SheChu_ZiDan","letterEn":[""]},"\\u4e50         \\u592a\\u5c11\\u89c1\\u4e86",{"value":"\\u5e38\\u4eba\\u4e0d\\u80fd","letterCn":"ChangRen_BuNeng","letterEn":[""]},{"value":"\\u6709\\u610f\\u601d","letterCn":"YouYiSi","letterEn":["fun"]},{"value":"\\u592a\\u597d\\u7b11\\u4e86","letterCn":"HaoXiao","letterEn":["fun"]},{"value":"\\u597d\\u624b\\u6bb5","letterCn":"HaoShouDuan","letterEn":["goodJob","goodWay"]},{"value":"\\u6d3b\\u4e45\\u89c1","letterCn":"Huo_Jiu_Jian","letterEn":[""]},{"value":"\\u4e0d\\u80fd\\u76f4\\u89c6","letterCn":"BuNeng_ZhiShi","letterEn":[""]},{"value":"\\u8c23\\u8a00\\u5bfb\\u6839","letterCn":"YaoYan_XunGen","letterEn":[""]},{"value":"\\u7ec6\\u601d\\u6781\\u6050","letterCn":"XiSiJiKong","letterEn":[""]},{"value":"\\u9ed1\\u8272\\u5e7d\\u9ed8","letterCn":"HeiSeYouMo","letterEn":["black"]},{"value":"\\u5927\\u8dcc\\u773c\\u955c","letterCn":"DaDieYanJing","letterEn":[""]},{"value":"\\u4e0d\\u80fd\\u5ffd\\u89c6","letterCn":"BuNeng_HuShi","letterEn":["must"]},{"value":"\\u610f\\u60f3\\u4e0d\\u5230","letterCn":"YiXiangBuDao","letterEn":[""]},{"value":"\\u795e\\u4e4e\\u5176\\u795e","letterCn":"ShenHuQiShen","letterEn":["wonder","amazing"]},{"value":"\\u521b\\u610f\\u5341\\u8db3","letterCn":"ChuangYiShiZu","letterEn":["wonder","amazing"]},{"value":"\\u5947\\u4eba\\u5947\\u4e8b","letterCn":"QiRenQiShi","letterEn":["wonder","amazing"]},{"value":"\\u95f9\\u5267","letterCn":"NaoJu","letterEn":["farce","funny"]},{"value":"\\u5408\\u8ba2\\u672c","letterCn":"HeDingBen","letterEn":[""]},{"value":"\\u8fd8\\u80fd\\u8fd9\\u4e48\\u73a9?","letterCn":"HaiNengZheMeWan","letterEn":[""]},{"value":"\\u56de\\u65cb\\u9556","letterCn":"HuiXuanBiao","letterEn":[""]},"\\u8d2a\\u55d4\\u75f4\\u6162           \\u4e0d\\u53ef\\u4ee5\\u5df1\\u5ea6\\u4eba",{"value":"\\u6d6a\\u8d39\\u8d44\\u6599\\u4e86","letterCn":"LangFei_ZiLiao","letterEn":[""]},{"value":"\\u9e21\\u9e23\\u72d7\\u5420","letterCn":"JiMingGouFei","letterEn":["joker"]},{"value":"\\u667a\\u969c","letterCn":"ZhiZhang__Joker","letterEn":["joker"]},{"value":"\\u53cc\\u6807\\u72d7","letterCn":"ShuangBiaoGou","letterEn":["dog","joker"]},{"value":"\\u62f7\\u6253\\u667a\\u969c","letterCn":"KaoDa_ZhiZhang","letterEn":[""]},{"value":"\\u6c11\\u751f\\u591a\\u8270","letterCn":"","letterEn":[""]},"\\u60ca\\u8bb6",{"value":"\\u96be\\u4ee5\\u7f6e\\u4fe1","letterCn":"NanYiZhiXin","letterEn":["unbelievable","incredible"]},"\\u609f",{"value":"\\u4eba\\u751f\\u611f\\u609f","letterCn":"RenShengGanWu","letterEn":[""]},{"value":"\\u751f\\u6d3b\\u4f53\\u609f","letterCn":"ShengHuo_TiWu","letterEn":[""]},"\\u53d1\\u6563\\u601d\\u7ef4",{"value":"\\u8111\\u6d1e\\u5927\\u5f00","letterCn":"HuanXiang_NaoDong","letterEn":[""]},"\\u603b\\u7ed3",{"value":"\\u603b\\u7ed3\\u7cbe\\u8f9f","letterCn":"ZongJie_JingPi","letterEn":[""]},{"value":"\\u6570\\u5b57\\u8bf4\\u8bdd","letterCn":"ShuZi_Shuahua","letterEn":[""]},{"value":"\\u771f\\u77e5\\u707c\\u89c1","letterCn":"ZhenZhiZhuoJian","letterEn":[""]},{"value":"\\u7b49\\u5f85\\u540e\\u7eed","letterCn":"DengDai_HouXu","letterEn":["Wait Continue"]},{"value":"\\u5927\\u4f17\\u90fd\\u662f\\u7334\\u5b50","letterCn":"DaZhong_doushi_HouZi","letterEn":["monkey","people"]},{"value":"\\u8349\\u53f0\\u73ed\\u5b50","letterCn":"CaoTaiBanZi","letterEn":[""]},{"value":"\\u793e\\u4f1a\\u5236\\u5ea6\\u6709\\u95ee\\u9898","letterCn":"SheHui_ZhiDu_YouWenTi_GongZheng_GonegPing","letterEn":[""]},"\\u7f16\\u8f91",{"value":"\\u91d1\\u53e5\\u6458\\u6284","letterCn":"JinJu","letterEn":[""]},"\\u53f9",{"value":"\\u95ea\\u5149\\u70b9","letterCn":"ShanGuangDian","letterEn":[""]},{"value":"\\u8fd8\\u662f\\u6709\\u771f\\u5584\\u7f8e\\u7684","letterCn":"HaiShiYou_ZhenShanMei","letterEn":[""]}];\n\n//  /data/codes/advanced/frontend/web/static/js/var/collection_tags.js <--\n\n// --> /data/codes/advanced/frontend/web/static/js/tampermonkey/bilibili/index.css\n\r\nif (kl.id(\'www__bilibili__com_css\') === null) {\r\nlet s = new Emt(\'style\', \'id="www__bilibili__com_css"\', \'\');\r\ns.innerHTML=`@media only screen  and (max-width: 1000px) {\r\n\r\n}\r\n\r\n* {\r\n    color: #666 !important;\r\n}\r\n\r\na {\r\n\r\n}\r\n\r\n.bili-video-card__info--tit {\r\n    height: auto !important;\r\n}\r\n\r\n.bili-video-card__info--tit a {\r\n    font-size: 1.5em;\r\n}\r\n\r\n.kl-in-com {\r\n    img, video {\r\n        opacity: 0.01;\r\n    }\r\n}\r\n\r\ndiv {\r\n}\r\n\r\n.kl-body {\r\n    .feed-card {\r\n\r\n    }\r\n\r\n    .bili-dyn-item__header {\r\n        .bili-dyn-content__orig, .bili-dyn-content__orig__topic {\r\n            display: none !important;\r\n        }\r\n\r\n    }\r\n\r\n    .bili-dyn-content__orig {\r\n        .bili-dyn-content__orig__topic {\r\n            display: none !important;\r\n        }\r\n    }\r\n\r\n    .bili-dyn-interaction {\r\n        .bili-dyn-interaction__item {\r\n            display: none !important;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n.kl-body .unavailable-ele {\r\n    display: none !important;\r\n}\r\n\r\n\r\n.kl-tv {\r\n    width: calc(100vw);\r\n    height: calc(100vh);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n\r\n.kl-b-tv {\r\n}\r\n\r\n.kl-tv-desktop {\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: row;\r\n    display: flex;\r\n}\r\n\r\n.kl-tv-ele {\r\n}\r\n\r\n.kl-flag-ele {\r\n    padding: 1em !important;\r\n}\r\n\r\n.kl-hover {\r\n    -box-sizing: border-box;\r\n    background: #000 !important;\r\n    color: #FFF !important;\r\n    -border: solid 1em #FF0;\r\n}\r\n\r\n.kl-b-tv-index {\r\n}\r\n\r\n.kl-desk-menus-container, .kl-desk-windows-container {\r\n    border: 1px solid #000;\r\n    height: calc(50vh);\r\n}\r\n\r\n.kl-desk-menus-container {\r\n    width: 10em;\r\n    background: #F00;\r\n}\r\n\r\n.kl-desk-windows-container {\r\n    flex: 1;\r\n    background: #0F0;\r\n}\r\n\r\n.kl-desk-menus-containerd > div, .kl-desk-windows-container > div {\r\n\r\n}\r\n\r\n.kl-desk-menus-container > div {\r\n\r\n}\r\n\r\n.kl-desk-windows-container > div {\r\n\r\n}\r\n\r\n.hide {\r\n    display: none;\r\n}\r\n\r\n.kl-player-iframe {\r\n\r\n}\r\n\r\n.kl-desk-modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 999999;\r\n    height: calc(100vh);\r\n    border: 1px solid #000;\r\n    min-width: 1em;\r\n    display: flex;\r\n    background: #FFF;\r\n}\r\n\r\n.kl-desk-modal > div {\r\n    float: left;\r\n    height: 100%;\r\n    min-width: 8em;\r\n    -padding: 1em;\r\n    border: 1px solid #000;\r\n\r\n}\r\n\r\n.kl-setting-area {\r\n    width: 30em;\r\n\r\n    a {\r\n        font-size: 2em;\r\n    }\r\n}\r\n\r\n.kl-channels-area {\r\n    a {\r\n        font-size: 2em;\r\n    }\r\n\r\n}\r\n\r\n.color-bg-1 {\r\n    background: linear-gradient(217deg, rgba(255, 0, 0, 0.8), rgba(255, 0, 0, 0) 70.71%),\r\n    linear-gradient(127deg, rgba(0, 255, 0, 0.8), rgba(0, 255, 0, 0) 70.71%),\r\n    linear-gradient(336deg, rgba(0, 0, 255, 0.8), rgba(0, 0, 255, 0) 70.71%);\r\n    animation: gradientShift 15s ease infinite;\r\n    background-size: 200% 200%;\r\n}\r\n\r\n.color-bg-2 {\r\n    background: repeating-linear-gradient(\r\n            190deg,\r\n            rgba(255, 0, 0, 0.5) 40px,\r\n            rgba(255, 153, 0, 0.5) 80px,\r\n            rgba(255, 255, 0, 0.5) 120px,\r\n            rgba(0, 255, 0, 0.5) 160px,\r\n            rgba(0, 0, 255, 0.5) 200px,\r\n            rgba(75, 0, 130, 0.5) 240px,\r\n            rgba(238, 130, 238, 0.5) 280px,\r\n            rgba(255, 0, 0, 0.5) 300px\r\n    ),\r\n    repeating-linear-gradient(\r\n            -190deg,\r\n            rgba(255, 0, 0, 0.5) 30px,\r\n            rgba(255, 153, 0, 0.5) 60px,\r\n            rgba(255, 255, 0, 0.5) 90px,\r\n            rgba(0, 255, 0, 0.5) 120px,\r\n            rgba(0, 0, 255, 0.5) 150px,\r\n            rgba(75, 0, 130, 0.5) 180px,\r\n            rgba(238, 130, 238, 0.5) 210px,\r\n            rgba(255, 0, 0, 0.5) 230px\r\n    ),\r\n    repeating-linear-gradient(\r\n            23deg,\r\n            red 50px,\r\n            orange 100px,\r\n            yellow 150px,\r\n            green 200px,\r\n            blue 250px,\r\n            indigo 300px,\r\n            violet 350px,\r\n            red 370px\r\n    );\r\n}\r\n\r\n@keyframes gradientShift {\r\n    0% {\r\n        background-position: 0% 0%;\r\n    }\r\n    25% {\r\n        background-position: 100% 0%;\r\n    }\r\n    50% {\r\n        background-position: 100% 100%;\r\n    }\r\n    75% {\r\n        background-position: 0% 100%;\r\n    }\r\n    100% {\r\n        background-position: 0% 0%;\r\n    }\r\n}\r\n\r\n.kl-setting-area > div {\r\n    width: 100%;\r\n    min-height: 2em;\r\n    float: left;\r\n    border: 1px solid #000 !important;\r\n    padding: 0px !important;\r\n}\r\n\r\n.kl-channels-area > div {\r\n    width: 15em;\r\n    height: 4em;\r\n    float: left;\r\n    border: 1px solid #000 !important;\r\n    padding: 0px !important;\r\n}\r\n\r\n.kl-channels-area > div > div {\r\n\r\n}\r\n\r\n.kl-setting-area > div > div, .kl-channels-area > div > div {\r\n    color: #FFF !important;\r\n    text-stroke: 1px #000;\r\n    text-shadow: 1px 1px 1em #000;\r\n}\r\n\r\n.kl-setting-area > div > span, .kl-channels-area > div > span {\r\n    display: none;\r\n}\r\n\r\n.kl-msgs-box {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 20em;\r\n    background: #DDD;\r\n    z-index: 99999;\r\n    max-height: calc(50vh);\r\n    opacity: 0.5;\r\n}\r\n\r\n.fade-out {\r\n    opacity: 1;\r\n    animation: fadeOut 60s forwards;\r\n}\r\n\r\n@keyframes fadeOut {\r\n    0% {\r\n        opacity: 1;\r\n        visibility: visible;\r\n    }\r\n    80% {\r\n        opacity: 1; /* 前80%时间保持显示 */\r\n    }\r\n    100% {\r\n        opacity: 0;\r\n        visibility: hidden;\r\n    }\r\n}\r\n\r\n#bilibili-player .kl-test {\r\n    display: none !important;\r\n}\r\n\r\n#bilibili-player .kl-flag-ele {\r\n}\r\n\r\n#bilibili-player .kl-hover {\r\n}\r\n\r\n.kl-no-debug .kl-test {\r\n    display: none !important;\r\n}\r\n\r\n.kl-history .unavailable-ele {\r\n    display: none !important;\r\n}\r\n\r\n.kl-history .bili-dyn-list__items {\r\n    float: left;\r\n    z-index: 999999;\r\n}\r\n\r\n\r\n.kl-history {\r\n    .bili-dyn-list__item {\r\n        width: 18%;\r\n        float: left;\r\n        padding: 1% !important;\r\n\r\n        .bili-dyn-item {\r\n            min-width: auto;\r\n        }\r\n\r\n        .bili-dyn-item__main {\r\n            padding: unset;\r\n        }\r\n\r\n        .fs-medium {\r\n            font-size: 20px !important;\r\n        }\r\n    }\r\n\r\n    .bili-dyn-item__footer, .bili-dyn-item__avatar, .bili-dyn-item__more, .bili-dyn-content__orig__desc {\r\n        display: none !important;\r\n    }\r\n\r\n    .bili-dyn-card-video {\r\n        display: block !important;\r\n        float: left;\r\n        height: auto;\r\n\r\n        .bili-dyn-card-video__body {\r\n            display: block !important;\r\n            width: 100% !important;\r\n\r\n            .fs-small {\r\n                display: none;\r\n            }\r\n\r\n            .bili-dyn-interaction__item {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        .bili-dyn-card-video__header {\r\n            width: 100% !important;\r\n        }\r\n    }\r\n}\r\n\r\n.kl-video-page {\r\n    .kl-video-opt {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: auto;\r\n        height: calc(100vh);\r\n        min-width: 20em;\r\n        z-index: 999999;\r\n    }\r\n\r\n    .kl-video-eplist {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: auto;\r\n        height: calc(100vh);\r\n        min-width: 20em;\r\n        z-index: 999999;\r\n        float: left;\r\n    }\r\n\r\n    .kl-video-rcmd-list {\r\n        left: 0px;\r\n        top: 0px;\r\n        position: fixed;\r\n        background: #FFF;\r\n        width: 100%;\r\n        z-index: 99999;\r\n\r\n        .video-page-card-small {\r\n            width: 22%;\r\n            float: left;\r\n        }\r\n    }\r\n}`;\r\ndocument.body.append(s);\r\n}\r\n\n//  /data/codes/advanced/frontend/web/static/js/tampermonkey/bilibili/index.css <--\n\n// --> /data/codes/advanced/frontend/web/static/js/tampermonkey/bilibili/index.js\n"use strict";\r\n/*jshint esversion: 6 */\r\n/*globals document,console,window,Emt,kl,CustomEvent */\r\n\r\n"use strict";\r\nlet klBBLL = {\r\n    intervalSwitch: true,\r\n    IS_DEBUG: false,\r\n    IS_IN_COM: false,\r\n    PAGE_FLAG: false,\r\n    CURR_AREA: false,\r\n    CURR_ELE: false,\r\n    VIDEO_PLAYER_CTRL_BAR: false,\r\n    _log: console.log,\r\n    _warn: console.warn,\r\n    _error: console.error,\r\n    log: () => {\r\n    },\r\n    warn: console.warn,\r\n    error: console.error,\r\n    debug: (isDebug) => {\r\n        if (isDebug === undefined) {\r\n            klBBLL.IS_DEBUG = !klBBLL.IS_DEBUG;\r\n        } else {\r\n            klBBLL.IS_DEBUG = !!isDebug;\r\n        }\r\n        if (klBBLL.IS_DEBUG) {\r\n            window.localStorage.setItem(\'isKlTvDebug\', \'true\');\r\n            document.body.classList.remove(\'kl-no-debug\');\r\n            klBBLL.log = klBBLL._log;\r\n            //   klBBLL.warn = klBBLL._warn;\r\n            //    klBBLL.error = klBBLL._error;\r\n        } else {\r\n            window.localStorage.setItem(\'isKlTvDebug\', \'false\');\r\n            document.body.classList.add(\'kl-no-debug\');\r\n            let fn = () => {\r\n            };\r\n            klBBLL.log = fn;\r\n            // klBBLL.warn = fn;\r\n            // klBBLL.error = fn;\r\n        }\r\n        console.warn(`切换 klBBLL.debug [${klBBLL.IS_DEBUG}]`);\r\n\r\n    },\r\n    setInCom: (isInCom) => {\r\n        klBBLL.IS_IN_COM = !!isInCom;\r\n        window.localStorage.setItem(\'isKlInCom\', klBBLL.IS_IN_COM.toString());\r\n        if (klBBLL.IS_IN_COM) {\r\n            document.body.classList.add(\'kl-in-com\');\r\n        } else {\r\n            document.body.classList.remove(\'kl-in-com\');\r\n        }\r\n        klBBLL.warn(`切换 klBBLL.is_in_company [${klBBLL.IS_IN_COM}]`);\r\n    },\r\n    lib: {\r\n        addMsg: text => {\r\n            klBBLL.desk.msgsBox.classList.add(\'fade-out\');\r\n            klBBLL.desk.msgsBox.style.animation = \'none\';\r\n            klBBLL.desk.msgsBox.offsetHeight; // 触发回流\r\n            klBBLL.desk.msgsBox.style.animation = \'fadeOut 5s forwards\';\r\n\r\n            //  klBBLL.desk.msgsBox.classList.remove(\'fade-out\');\r\n            //\r\n            if (klBBLL.desk.msgsBox.children.length > 0) {\r\n                klBBLL.desk.msgsBox.insertBefore(kl.HTML.PARAGRAPH(\'\', (new Date()).toLocaleTimeString() + `:${text}`), klBBLL.desk.msgsBox.firstElementChild);\r\n            } else {\r\n                klBBLL.desk.msgsBox.addNodes([kl.HTML.PARAGRAPH(\'\', (new Date()).toLocaleTimeString() + `:${text}`),]);\r\n            }\r\n\r\n        },\r\n        hoverElement: function (element) {\r\n            if (!element) {\r\n                klBBLL.lib.addMsg(\'hoverElement 调用错误\');\r\n                return false;\r\n            }\r\n            const mouseOverEvent = new MouseEvent("mouseover", {\r\n                bubbles: true,    // 是否冒泡\r\n                cancelable: true, // 是否可以取消\r\n                view: window      // 关联的 window 对象\r\n            });\r\n            element.dispatchEvent(mouseOverEvent);\r\n        },\r\n        hoverEnterElement: function (element) {\r\n            if (!element) {\r\n                klBBLL.lib.addMsg(\'hoverEnterElement 调用错误\');\r\n                return false;\r\n            }\r\n            const mouseOverEvent = new MouseEvent("mouseenter", {\r\n                bubbles: true,    // 是否冒泡\r\n                cancelable: true, // 是否可以取消\r\n                view: window      // 关联的 window 对象\r\n            });\r\n            element.dispatchEvent(mouseOverEvent);\r\n        },\r\n        hoverOutElement: function (element) {\r\n            if (!element) {\r\n                klBBLL.lib.addMsg(\'hoverOutElement 调用错误\');\r\n                return false;\r\n            }\r\n            const mouseOverEvent = new MouseEvent("mouseleave", {\r\n                bubbles: true,    // 是否冒泡\r\n                cancelable: true, // 是否可以取消\r\n                view: window      // 关联的 window 对象\r\n            });\r\n            element.dispatchEvent(mouseOverEvent);\r\n        },\r\n        keyInput: function (keyCode) {\r\n            let tmpKV = {\r\n                Space: 32,\r\n                Escape: 27,\r\n                Backspace: 8,\r\n                Enter: 13,\r\n                Delete: 46,\r\n                ContextMenu: 93,\r\n\r\n            };\r\n            let code2val = {\r\n                Space: \' \',\r\n            };\r\n            let keyAsciiCode = tmpKV[keyCode];\r\n            let eventInitDict = {\r\n                key: code2val[keyCode] || keyCode,\r\n                code: keyCode,\r\n                keyCode: keyAsciiCode,  // 空格键的 keyCode\r\n                which: keyAsciiCode,\r\n                bubbles: true,\r\n                cancelable: true\r\n            };\r\n\r\n            // 触发事件（在特定元素上）\r\n            // const element = document.getElementById(\'targetElement\');\r\n            console.log(eventInitDict);\r\n            document.body.dispatchEvent(new KeyboardEvent(\'keydown\', eventInitDict));\r\n            document.body.dispatchEvent(new KeyboardEvent(\'keyup\', eventInitDict));\r\n\r\n        },\r\n        click: function (element) {\r\n            element.dispatchEvent(new MouseEvent("click", {bubbles: true}));\r\n        },\r\n        getElementLeft: (element) => {\r\n            var actualLeft = element.offsetLeft;\r\n            var current = element.offsetParent;\r\n\r\n            while (current !== null) {\r\n                actualLeft += current.offsetLeft;\r\n                current = current.offsetParent;\r\n            }\r\n\r\n            return actualLeft;\r\n        },\r\n\r\n        getElementTop: (element) => {\r\n            var actualTop = element.offsetTop;\r\n            var current = element.offsetParent;\r\n\r\n            while (current !== null) {\r\n                actualTop += current.offsetTop;\r\n                current = current.offsetParent;\r\n            }\r\n\r\n            return actualTop;\r\n        },\r\n        getElementByClassName: (className, funName) => {\r\n            let eles = document.getElementsByClassName(className);\r\n            if (eles.length === 1) {\r\n                if (funName) {\r\n                    HTMLElement.prototype[funName].call(eles[0]);\r\n                }\r\n                return eles[0];\r\n\r\n            } else if (eles.length > 1) {\r\n                kl.error(`获取元素错误，请检查元素名称 [${className}]`);\r\n                return false;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n    },\r\n    areaKeys: [],\r\n    areaKV: {\r\n        settingArea: {\r\n            title: \'设置\',\r\n            isInitedArea: true,\r\n            isElesCountFixed: true,\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                ArrowLeft: true,\r\n                ArrowRight: true,\r\n                Enter: () => {\r\n                    klBBLL.log(klBBLL.CURR_AREA.CURR_ELE);\r\n                    let as = kl.xpathSearch(\'.//a\', klBBLL.CURR_AREA.CURR_ELE);\r\n                    klBBLL.log(as);\r\n                    if (as.length > 0) {\r\n                        //    as[0].click();\r\n                        if (as[0].isOpenSelf === true) {\r\n                            window.location.href = as[0].href;\r\n                        } else {\r\n                            window.open(as[0].href);\r\n                        }\r\n\r\n                        //  klBBLL.videoPlayerIframe.classList.remove(\'hide\');\r\n                    }\r\n\r\n                },\r\n                Delete: () => {\r\n\r\n                    //  document.querySelector(\'video\').requestFullscreen();\r\n                    window.close();\r\n                },\r\n                ContextMenu: () => {\r\n                    klBBLL.warn(\'总菜单触发菜单 不能使用，会连环 触发\');\r\n\r\n                    return false;\r\n                    if (klBBLL.areaKV.settingArea._REFFRE_AREA) {\r\n                        klBBLL.areaKV.settingArea._REFFRE_AREA.enterArea(klBBLL.areaKV.settingArea);\r\n                    }\r\n                },\r\n            },\r\n            menusDiv: kl.HTML.DIV(\'class="kl-setting-area color-bg-1"\').addNodes([new Emt(\'h3\', \'\', \'设置\')]),\r\n            chanelsDiv: kl.HTML.DIV(\'class="kl-channels-area color-bg-1"\').addNodes([new Emt(\'h3\', \'\', \'频道\')]),\r\n\r\n            eles: [],\r\n            _init: () => {\r\n                document.body.append(\r\n                    klBBLL.desk.modal.addNodes([\r\n                        klBBLL.areaKV.settingArea.menusDiv,\r\n                        klBBLL.areaKV.settingArea.chanelsDiv,\r\n                    ]),\r\n                    klBBLL.desk.msgsBox,\r\n                );\r\n            },\r\n            makeElesFuns: [\r\n                (funIndex) => {\r\n\r\n                    klBBLL.areaKV.settingArea.eles = [\r\n                        [\'首页\', \'https://www.bilibili.com\', {isOpenSelf: true}],\r\n                        [\'订阅\', \'https://t.bilibili.com/?tab=video\'],\r\n                        [\'历史\', \'https://www.bilibili.com/history\']\r\n                    ].map(ar => {\r\n                        return kl.HTML.DIV().addNodes([kl.HTML.ANCHOR(\'\', ar[0], Object.assign({href: ar[1]}, ar[2] || {}))]);\r\n                    });\r\n                    klBBLL.areaKV.settingArea.menusDiv.addNodes(klBBLL.areaKV.settingArea.eles);\r\n\r\n                    let eles = [];\r\n\r\n                    let as = [\r\n                        {"href": "https://www.bilibili.com/v/popular/all", "text": "热门"},\r\n                        {"href": "https://www.bilibili.com/anime/", "text": "番剧"},\r\n                        {"href": "https://www.bilibili.com/movie/", "text": "电影"},\r\n                        {"href": "https://www.bilibili.com/guochuang/", "text": "国创"},\r\n                        {"href": "https://www.bilibili.com/tv/", "text": "电视剧"},\r\n                        {"href": "https://www.bilibili.com/variety/", "text": "综艺"},\r\n                        {"href": "https://www.bilibili.com/documentary/", "text": "纪录片"},\r\n                        {"href": "https://www.bilibili.com/c/douga/", "text": "动画"},\r\n                        {"href": "https://www.bilibili.com/c/game/", "text": "游戏"},\r\n                        {"href": "https://www.bilibili.com/c/kichiku/", "text": "鬼畜"},\r\n                        {"href": "https://www.bilibili.com/c/music/", "text": "音乐"},\r\n                        {"href": "https://www.bilibili.com/c/dance/", "text": "舞蹈"},\r\n                        {"href": "https://www.bilibili.com/c/cinephile/", "text": "影视"},\r\n                        {"href": "https://www.bilibili.com/c/ent/", "text": "娱乐"},\r\n                        {"href": "https://www.bilibili.com/c/knowledge/", "text": "知识"},\r\n                        {"href": "https://www.bilibili.com/c/tech/", "text": "科技数码"},\r\n                        {"href": "https://www.bilibili.com/c/information/", "text": "资讯"},\r\n                        {"href": "https://www.bilibili.com/c/food/", "text": "美食"},\r\n                        {"href": "https://www.bilibili.com/c/shortplay/", "text": "小剧场"},\r\n                        {"href": "https://www.bilibili.com/read/home/", "text": "专栏"},\r\n                        {"href": "https://live.bilibili.com/", "text": "直播"},\r\n                        {"href": "https://www.bilibili.com/cheese/", "text": "课堂"},\r\n                        {"href": "https://www.bilibili.com/c/car", "text": "汽车"},\r\n                        {"href": "https://www.bilibili.com/c/fashion/", "text": "时尚美妆"},\r\n                        {"href": "https://www.bilibili.com/c/sports/", "text": "体育运动"},\r\n                        {"href": "https://www.bilibili.com/c/animal/", "text": "动物"},\r\n                        {"href": "https://www.bilibili.com/c/vlog/", "text": "vlog"},\r\n                        {"href": "https://www.bilibili.com/c/painting/", "text": "绘画"},\r\n                        {"href": "https://www.bilibili.com/c/ai/", "text": "人工智能"},\r\n                        {"href": "https://www.bilibili.com/c/home/", "text": "家装房产"},\r\n                        {"href": "https://www.bilibili.com/c/outdoors/", "text": "户外潮流"},\r\n                        {"href": "https://www.bilibili.com/c/gym/", "text": "健身"},\r\n                        {"href": "https://www.bilibili.com/c/handmake/", "text": "手工"},\r\n                        {"href": "https://www.bilibili.com/c/travel/", "text": "旅游出行"},\r\n                        {"href": "https://www.bilibili.com/c/rural/", "text": "三农"},\r\n                        {"href": "https://www.bilibili.com/c/parenting/", "text": "亲子"},\r\n                        {"href": "https://www.bilibili.com/c/health/", "text": "健康"},\r\n                        {"href": "https://www.bilibili.com/c/emotion/", "text": "情感"},\r\n                        {"href": "https://www.bilibili.com/c/life_joy/", "text": "生活兴趣"},\r\n                        {"href": "https://www.bilibili.com/c/life_experience/", "text": "生活经验"},\r\n                        {"href": "https://love.bilibili.com/", "text": "公益"},\r\n                        {"href": "https://www.bilibili.com/blackboard/era/Vp41b8bsU9Wkog3X.html", "text": "超高清"},\r\n                        {"href": "https://game.bilibili.com/platform", "text": "游戏中心"},\r\n                        {"href": "https://show.bilibili.com/platform/home.html?msource=pc_web", "text": "会员购"},\r\n                        {"href": "https://manga.bilibili.com/?from=bill_top_mnav", "text": "漫画"},\r\n                        {"href": "https://www.bilibili.com/match/home/", "text": "赛事"},\r\n                        {"href": "https://www.bilibili.com/festival/1fzdhjc", "text": "1分钟1分钟"},\r\n                        {"href": "https://space.bilibili.com/27183596", "text": ""},\r\n                        {"href": "https://account.bilibili.com/big", "text": "大会员"},\r\n                        {"href": "https://www.bilibili.com/cheese/?csource=common_hp_channelclass_icon", "text": "课堂"}\r\n                    ];\r\n                    klBBLL.log(\'as:\', as);\r\n                    as.forEach(a => {\r\n\r\n                        let tmpEle = kl.HTML.DIV().addNodes([kl.HTML.ANCHOR(\'\', a.text, {href: a.href})]);\r\n\r\n\r\n                        eles.push(tmpEle);\r\n                        klBBLL.areaKV.settingArea.chanelsDiv.addNodes([tmpEle]);\r\n                        klBBLL.areaKV.settingArea.eles.push(tmpEle);\r\n\r\n                    });\r\n\r\n\r\n                    delete klBBLL.areaKV.settingArea.makeElesFuns[funIndex];\r\n                    return [];\r\n                },\r\n            ],\r\n            _show: () => {\r\n                klBBLL.warn(\'进入菜单 _show\');\r\n                klBBLL.desk.modal.classList.remove(\'hide\');\r\n            },\r\n            _enterArea: function (reffreArea) {\r\n                klBBLL.warn(\'进入菜单\');\r\n\r\n                //  klBBLL.lib.hoverEnterElement(klBBLL.areaKV.videoVoiceArea.barRootEle);\r\n            },\r\n            _exitArea: function () {\r\n                klBBLL.desk.modal.classList.add(\'hide\');\r\n            },\r\n        },\r\n        DefaultArea: {\r\n            title: \'默认，未做\',\r\n            eles: [kl.HTML.DIV()],\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                Enter: () => {\r\n                    // 创建并触发 keydown 事件\r\n                    const keydownEvent = new KeyboardEvent(\'keydown\', {\r\n                        key: \' \',\r\n                        code: \'Space\',\r\n                        keyCode: 32,  // 空格键的 keyCode\r\n                        which: 32,\r\n                        bubbles: true,\r\n                        cancelable: true\r\n                    });\r\n\r\n                    // 创建并触发 keyup 事件\r\n                    const keyupEvent = new KeyboardEvent(\'keyup\', {\r\n                        key: \' \',\r\n                        code: \'Space\',\r\n                        keyCode: 32,\r\n                        which: 32,\r\n                        bubbles: true,\r\n                        cancelable: true\r\n                    });\r\n\r\n                    // 触发事件（在特定元素上）\r\n                    // const element = document.getElementById(\'targetElement\');\r\n                    document.dispatchEvent(keydownEvent);\r\n                    document.dispatchEvent(keyupEvent);\r\n                    //  document.dispatchEvent()\r\n                },\r\n                //这个是setting图标，\r\n                Backspace: () => {\r\n                    klBBLL.areaKV.settingArea.setLeftAreaObj(klBBLL.areaKV.videoEmptyArea);\r\n                    klBBLL.areaKV.settingArea.enterArea(klBBLL.areaKV.videoEmptyArea);\r\n                },\r\n                //setting 图标右边的，以为是退出\r\n                Delete: () => {\r\n                    //  document.querySelector(\'video\').requestFullscreen();\r\n                    window.close();\r\n                },\r\n                ContextMenu: () => {\r\n                    //右击菜单效果  也拦不住\r\n                    //window.close();\r\n                    klBBLL.warn(\'播放器触发菜单\');\r\n                    klBBLL.areaKV.videoOptionArea.enterArea(klBBLL.areaKV.DefaultArea);\r\n                },\r\n            },\r\n            makeElesFuns: [],\r\n            _enterArea: function () {\r\n                kl.log(\'进入\', klBBLL.areaKV.DefaultArea);\r\n            },\r\n            _exitArea: function () {\r\n                kl.log(\'退出\', klBBLL.areaKV.DefaultArea);\r\n            },\r\n\r\n        },\r\n\r\n        rcmdVideoArea: {\r\n            title: \'推荐视频\',\r\n            isInitedArea: false,\r\n            xy2DArrayType:\'root\',\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                ArrowLeft: true,\r\n                ArrowRight: true,\r\n                Enter: () => {\r\n                    if (klBBLL.CURR_AREA.CURR_ELE.isVideoLinkEle) {\r\n                        klBBLL.log(klBBLL.CURR_AREA.CURR_ELE);\r\n                        let as = kl.xpathSearch(\'.//a\', klBBLL.CURR_AREA.CURR_ELE);\r\n                        klBBLL.log(as);\r\n                        if (as.length > 0) {\r\n                            //    as[0].click();\r\n                            window.open(as[0].href);\r\n                            //  klBBLL.videoPlayerIframe.classList.remove(\'hide\');\r\n                        }\r\n                    }\r\n                },\r\n                Delete: () => {\r\n                    document.location.reload();\r\n                    return false;\r\n                    //  document.querySelector(\'video\').requestFullscreen();\r\n                    window.close();\r\n                },\r\n                ContextMenu: () => {\r\n                    klBBLL.areaKV.settingArea.enterArea(klBBLL.areaKV.rcmdVideoArea);\r\n                },\r\n            },\r\n            xpaths: [\r\n                //`.//main//div[contains(@class,\'bili-video-card \') and not(@has-kl-flag)]`,\r\n            ],\r\n            makeElesFuns: [\r\n                () => {\r\n\r\n                    let ar = [];\r\n                    let tmp_ar = document.getElementsByClassName(\'container\');\r\n                    if (tmp_ar.length !== 1) {\r\n                        klBBLL.error(\'container 定位错误\', tmp_ar);\r\n                        return [];\r\n                    }\r\n\r\n                    Object.values(tmp_ar[0].children).forEach((tmpEle, index) => {\r\n\r\n                        if (tmpEle.klTryTimes === undefined) {\r\n                            tmpEle.klTryTimes = 0;\r\n                        } else if (tmpEle.klTryTimes === -1) {\r\n                            return false;\r\n                        }\r\n                        //有些item 惰加载,超过5次直接放弃\r\n                        if (tmpEle.klTryTimes > 5) {\r\n                            klBBLL.log(\'有些item 惰加载,超过5次直接放弃\',tmpEle, tmpEle.className, tmpEle.hasKlMark, tmpEle.classList.contains(\'bili-video-card\') || tmpEle.classList.contains(\'feed-card\'), tmpEle.hasKlMark !== true && (tmpEle.classList.contains(\'bili-video-card\') || tmpEle.classList.contains(\'feed-card\')));\r\n                            tmpEle.klTryTimes = -1;\r\n                            return false;\r\n                        }\r\n                        if (tmpEle.hasKlMark !== true) {\r\n                            // tmpEle.setAttribute(\'has-kl-flag\', \'\');\r\n                            tmpEle.classList.add(\'kl-flag-ele\');\r\n                            tmpEle.setAttribute(\'has-kl-flag\', \'yes\');\r\n                            let span = new Emt(\'span\', \'class="kl-test"\', \'####\');\r\n                            tmpEle.insertBefore(span, tmpEle.firstElementChild);\r\n                            let index = Array.prototype.indexOf.call(tmpEle.parentNode.childNodes, tmpEle);\r\n                            span.textContent = `top:${tmpEle.offsetTop}  left:${tmpEle.offsetLeft} index:${index}`;\r\n                            tmpEle.isKlElement = true;\r\n                            ar.push(tmpEle);\r\n                            tmpEle.classList.add(\'kl-flag-ele\');\r\n                            tmpEle.klTryTimes = -1;\r\n                            tmpEle.infoSpan = span;\r\n                            tmpEle.isKlElement = true;\r\n                            tmpEle.isVideoLinkEle = true;\r\n                        } else {\r\n                            tmpEle.klTryTimes += 1;\r\n                        }\r\n                        if (index === 0) {\r\n\r\n                        }\r\n                        // tmpEle.hasKlMark = true;\r\n                        tmpEle.setAttribute(\'has-kl-flag\', \'yes\');\r\n\r\n\r\n                    });\r\n                    if (ar.length > 0) {\r\n                        klBBLL.CURR_AREA.init2DArray();\r\n                        if (!klBBLL.CURR_AREA.CURR_ELE) {\r\n                            klBBLL.CURR_AREA.move.flushCurrentEleInfo(0);\r\n                        }\r\n                    }\r\n                    return ar;\r\n                },\r\n            ],\r\n            eles: [],\r\n            _enterArea: function (reffreArea) {\r\n            },\r\n            _exitArea: function () {\r\n\r\n            },\r\n        },\r\n        subscribeVideoArea: {\r\n            title: \'订阅视频\',\r\n            isInitedArea: false,\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                ArrowLeft: true,\r\n                ArrowRight: true,\r\n                Enter: () => {\r\n\r\n                    klBBLL.log(klBBLL.CURR_AREA.CURR_ELE);\r\n                    let as = kl.xpathSearch(\'.//a\', klBBLL.CURR_AREA.CURR_ELE);\r\n                    klBBLL.log(as);\r\n\r\n                    if (as.length > 0) {\r\n                        Object.values(as).forEach(a => {\r\n                            if (a.href.indexOf(\'/video/\') > -1) {\r\n                                window.open(a.href);\r\n                            }\r\n                        });\r\n                        //    as[0].click();\r\n\r\n                        //  klBBLL.videoPlayerIframe.classList.remove(\'hide\');\r\n                    }\r\n\r\n                },\r\n                Delete: () => {\r\n                    //  document.querySelector(\'video\').requestFullscreen();\r\n                    window.close();\r\n                },\r\n                ContextMenu: () => {\r\n                    klBBLL.areaKV.settingArea.enterArea(klBBLL.areaKV.subscribeVideoArea);\r\n                },\r\n                ArrowDownFalse: () => {\r\n                    klBBLL.warn(\'到头了 zzz\');\r\n                    document.scrollingElement.scrollTop += 500;\r\n                    let evt = window.document.createEvent(\'UIEvent\');\r\n                    evt.initUIEvent(\'scroll\', true, false, window, 0);\r\n                    window.dispatchEvent(evt)\r\n                },\r\n            },\r\n            xpaths: [\r\n                //`.//main//div[contains(@class,\'bili-video-card \') and not(@has-kl-flag)]`,\r\n            ],\r\n            tmpCount: {},\r\n            makeElesFuns: [\r\n                (funIndex) => {\r\n                    let countTimes = (klBBLL.areaKV.subscribeVideoArea.tmpCount[funIndex] || 0) + 1;\r\n                    klBBLL.areaKV.subscribeVideoArea.tmpCount[funIndex] = countTimes;\r\n                    let tmpAr = Object.values(document.querySelectorAll(\'section\'));\r\n\r\n                    tmpAr.forEach(tmpEle => {\r\n                        if (tmpEle.getElementsByClassName(\'bili-dyn-list\').length === 0) {\r\n                            tmpEle.classList.add(\'unavailable-ele\');\r\n                        } else {\r\n                            // console.log(\'section\', tmpEle);\r\n                            tmpEle.style.zIndex = \'999999\';\r\n                            tmpEle.style.background = \'#FFF\';\r\n                        }\r\n                    });\r\n                    Object.values(document.querySelectorAll(\'aside\')).forEach((tmpEle) => {\r\n                        tmpEle.classList.add(\'unavailable-ele\');\r\n                    });\r\n                    if (countTimes > 10) {\r\n                        delete klBBLL.areaKV.subscribeVideoArea.makeElesFuns[funIndex];\r\n                    }\r\n                    return [];\r\n\r\n                },\r\n                (funIndex) => {\r\n                    document.querySelector(\'main\').parentElement.style.width = \'100%\';\r\n                    document.querySelector(\'main\').style.width = \'100%\';\r\n                    //   console.log(document.querySelector(\'main\'), document.querySelector(\'main\').parentElement);\r\n                    document.body.classList.add(\'kl-history\');\r\n                    delete klBBLL.areaKV.subscribeVideoArea.makeElesFuns[funIndex];\r\n                    return [];\r\n\r\n                },\r\n                () => {\r\n\r\n                    let ar = [];\r\n                    let tmp_ar = document.getElementsByClassName(\'bili-dyn-list__items\');\r\n                    if (tmp_ar.length !== 1) {\r\n                        klBBLL.error(\'[bili-dyn-list__items] 定位错误\', tmp_ar);\r\n                        return [];\r\n                    }\r\n\r\n                    Object.values(tmp_ar[0].children).forEach((tmpEle, index) => {\r\n\r\n                        if (tmpEle.hasKlMark !== true) {\r\n                            // tmpEle.setAttribute(\'has-kl-flag\', \'\');\r\n                            tmpEle.classList.add(\'kl-flag-ele\');\r\n                            tmpEle.setAttribute(\'has-kl-flag\', \'yes\');\r\n                            let span = new Emt(\'span\', \'class="kl-test"\', \'####\');\r\n                            tmpEle.insertBefore(span, tmpEle.firstElementChild);\r\n                            let index = Array.prototype.indexOf.call(tmpEle.parentNode.childNodes, tmpEle);\r\n                            span.textContent = `top:${tmpEle.offsetTop}  left:${tmpEle.offsetLeft} index:${index}`;\r\n                            tmpEle.isKlElement = true;\r\n                            ar.push(tmpEle);\r\n                            tmpEle.classList.add(\'kl-flag-ele\');\r\n                            tmpEle.klTryTimes = -1;\r\n                            tmpEle.infoSpan = span;\r\n                            tmpEle.isKlElement = true;\r\n                            tmpEle.isVideoLinkEle = true;\r\n                        } else {\r\n                            tmpEle.klTryTimes += 1;\r\n                        }\r\n                        if (index === 0) {\r\n\r\n                        }\r\n                        tmpEle.hasKlMark = true;\r\n                        tmpEle.setAttribute(\'has-kl-flag\', \'yes\');\r\n\r\n\r\n                    });\r\n                    if (ar.length > 0) {\r\n                        klBBLL.CURR_AREA.init2DArray();\r\n                        if (!klBBLL.CURR_AREA.CURR_ELE) {\r\n                            klBBLL.CURR_AREA.move.flushCurrentEleInfo(0);\r\n                        }\r\n                    }\r\n                    return ar;\r\n                },\r\n            ],\r\n            eles: [],\r\n            _enterArea: function (reffreArea) {\r\n            },\r\n            _exitArea: function () {\r\n\r\n            },\r\n        },\r\n        historyArea: {\r\n            title: \'历史\',\r\n            isInitedArea: false,\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                ArrowDownFalse: () => {\r\n                    klBBLL.log(\'到底了\');\r\n                    document.scrollingElement.scrollTop += 500;\r\n                    //klBBLL.lib.keyInput(\'Space\');\r\n                },\r\n\r\n                ArrowLeft: true,\r\n                ArrowRight: true,\r\n                Enter: () => {\r\n                    klBBLL.log(klBBLL.CURR_AREA.CURR_ELE);\r\n                    let as = kl.xpathSearch(\'.//a\', klBBLL.CURR_AREA.CURR_ELE);\r\n                    klBBLL.log(as);\r\n\r\n                    if (as.length > 0) {\r\n                        Object.values(as).forEach(a => {\r\n                            if (a.href.indexOf(\'/video/\') > -1) {\r\n                                window.open(a.href);\r\n                            }\r\n                        });\r\n                        //    as[0].click();\r\n\r\n                        //  klBBLL.videoPlayerIframe.classList.remove(\'hide\');\r\n                    }\r\n\r\n                },\r\n                Delete: () => {\r\n                    //  document.querySelector(\'video\').requestFullscreen();\r\n                    window.close();\r\n                },\r\n                ContextMenu: () => {\r\n                    klBBLL.areaKV.settingArea.enterArea(klBBLL.areaKV.historyArea);\r\n                },\r\n            },\r\n            xpaths: [],\r\n            makeElesFuns: [\r\n                () => {\r\n                    let ar = [];\r\n                    Object.values(document.getElementsByClassName(\'history-card\')).forEach((tmpEle, index) => {\r\n\r\n                        if (tmpEle.hasKlMark !== true) {\r\n                            // tmpEle.setAttribute(\'has-kl-flag\', \'\');\r\n                            tmpEle.classList.add(\'kl-flag-ele\');\r\n                            tmpEle.setAttribute(\'has-kl-flag\', \'yes\');\r\n                            let span = new Emt(\'span\', \'class="kl-test"\', \'####\');\r\n                            tmpEle.insertBefore(span, tmpEle.firstElementChild);\r\n                            let index = Array.prototype.indexOf.call(tmpEle.parentNode.childNodes, tmpEle);\r\n                            span.textContent = `top:${tmpEle.offsetTop}  left:${tmpEle.offsetLeft} index:${index}`;\r\n                            tmpEle.isKlElement = true;\r\n                            ar.push(tmpEle);\r\n                            tmpEle.classList.add(\'kl-flag-ele\');\r\n                            tmpEle.klTryTimes = -1;\r\n                            tmpEle.infoSpan = span;\r\n                            tmpEle.isKlElement = true;\r\n                            tmpEle.isVideoLinkEle = true;\r\n                        } else {\r\n                            tmpEle.klTryTimes += 1;\r\n                        }\r\n                        if (index === 0) {\r\n\r\n                        }\r\n                        tmpEle.hasKlMark = true;\r\n                        tmpEle.setAttribute(\'has-kl-flag\', \'yes\');\r\n\r\n\r\n                    });\r\n                    if (ar.length > 0) {\r\n                        klBBLL.CURR_AREA.init2DArray();\r\n                        if (!klBBLL.CURR_AREA.CURR_ELE) {\r\n                            klBBLL.CURR_AREA.move.flushCurrentEleInfo(0);\r\n                        }\r\n                    }\r\n                    return ar;\r\n                },\r\n            ],\r\n            eles: [],\r\n            _enterArea: function (reffreArea) {\r\n            },\r\n            _exitArea: function () {\r\n\r\n            },\r\n        },\r\n        videoEmptyArea: {\r\n            title: \'视频播放器-空白-上下退出\',\r\n            eles: [kl.HTML.DIV()],\r\n            toggleFullScreenBtn: false,\r\n            toggleSubtitleBtn: false,\r\n            toggleDanmuBtn: false,\r\n            durationBar: false,\r\n            hoverDurationBarCountDownNum: 0,\r\n            toggleFullScreen: (isFullScreen) => {\r\n                if (klBBLL.areaKV.videoEmptyArea.toggleFullScreenBtn) {\r\n                    if (isFullScreen === undefined) {\r\n                        klBBLL.areaKV.videoEmptyArea.toggleFullScreenBtn.click();\r\n                    } else {\r\n                        let isNowFullScreen = (document.querySelector(\'video\').offsetWidth * 1.2) > document.body.clientWidth;\r\n                        klBBLL.warn(\'当前是否为全屏\', isNowFullScreen);\r\n                        if (isFullScreen) {\r\n                            if (isNowFullScreen === false) {\r\n                                klBBLL.areaKV.videoEmptyArea.toggleFullScreenBtn.click();\r\n                            }\r\n                        } else {\r\n                            if (isNowFullScreen) {\r\n                                klBBLL.areaKV.videoEmptyArea.toggleFullScreenBtn.click();\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    kl.error(\'未找到全屏按钮\');\r\n                }\r\n                // document.getElementsByClassName(\'bpx-player-ctrl-full\')[0].click();\r\n            },\r\n\r\n            toggleSubtitle: () => {\r\n                if (klBBLL.areaKV.videoEmptyArea.toggleSubtitleBtn) {\r\n                    klBBLL.areaKV.videoEmptyArea.toggleSubtitleBtn.click();\r\n                } else {\r\n                    kl.error(\'未找到弹幕按钮\');\r\n                }\r\n            },\r\n            KeyCodeKV: {\r\n                ArrowUp: function () {\r\n                    // document.getElementsByClassName(\'bpx-player-ctrl-full\')[0].click();\r\n                    //  document.querySelector(\'video\').requestFullscreen();\r\n                    if (klBBLL.areaKV.videoEmptyArea.up1 === undefined) {\r\n                        klBBLL.areaKV.videoEmptyArea.up1 = true;\r\n                        klBBLL.areaKV.videoEmptyArea.toggleFullScreenBtn.click();\r\n                        klBBLL.areaKV.videoEmptyArea.KeyCodeKV.ArrowUp = false;\r\n                    } else {\r\n                        let max = window.player.getDuration();\r\n                        let now = window.player.getCurrentTime();\r\n                        let diff = max / 100;\r\n                        if (diff < 60) {\r\n                            diff = 60;\r\n                        }\r\n                        let expect = now + diff;\r\n                        if (expect < max) {\r\n                            window.player.seek(expect);\r\n                        }\r\n                        klBBLL.areaKV.videoEmptyArea.hoverDurationBarCountDownNum = 5;\r\n                    }\r\n\r\n                },\r\n\r\n                ArrowDown: function () {\r\n                    let max = window.player.getDuration();\r\n                    let now = window.player.getCurrentTime();\r\n                    let diff = max / 100;\r\n                    if (diff < 60) {\r\n                        diff = 60;\r\n                    }\r\n                    let expect = now - diff;\r\n                    if (expect > 0) {\r\n                        window.player.seek(expect);\r\n                    }\r\n                    klBBLL.areaKV.videoEmptyArea.hoverDurationBarCountDownNum = 5;\r\n\r\n                },\r\n                Enter: () => {\r\n                    // 创建并触发 keydown 事件\r\n                    const keydownEvent = new KeyboardEvent(\'keydown\', {\r\n                        key: \' \',\r\n                        code: \'Space\',\r\n                        keyCode: 32,  // 空格键的 keyCode\r\n                        which: 32,\r\n                        bubbles: true,\r\n                        cancelable: true\r\n                    });\r\n\r\n                    // 创建并触发 keyup 事件\r\n                    const keyupEvent = new KeyboardEvent(\'keyup\', {\r\n                        key: \' \',\r\n                        code: \'Space\',\r\n                        keyCode: 32,\r\n                        which: 32,\r\n                        bubbles: true,\r\n                        cancelable: true\r\n                    });\r\n\r\n                    // 触发事件（在特定元素上）\r\n                    // const element = document.getElementById(\'targetElement\');\r\n                    document.dispatchEvent(keydownEvent);\r\n                    document.dispatchEvent(keyupEvent);\r\n                    //  document.dispatchEvent()\r\n                },\r\n                Escape: () => {\r\n                    //  klBBLL.areaKV.settingArea.setLeftAreaObj(klBBLL.areaKV.videoEmptyArea);\r\n                    // klBBLL.areaKV.settingArea.enterArea(klBBLL.areaKV.videoEmptyArea);\r\n                    // document.getElementsByClassName(\'bpx-player-ctrl-full\')[0].click();\r\n                },\r\n\r\n\r\n                //这个是setting图标，\r\n                Backspace: () => {\r\n                    klBBLL.areaKV.settingArea.setLeftAreaObj(klBBLL.areaKV.videoEmptyArea);\r\n                    klBBLL.areaKV.settingArea.enterArea(klBBLL.areaKV.videoEmptyArea);\r\n                },\r\n                //setting 图标右边的，以为是退出\r\n                Delete: () => {\r\n                    //  document.querySelector(\'video\').requestFullscreen();\r\n                    window.close();\r\n                },\r\n\r\n\r\n                BrowserBack: () => {\r\n                    //home旁边的以为是 escape ，没想到这个返回是 浏览器返回\r\n\r\n                },\r\n                BrowserHome: () => {\r\n                    //这个是home  拦截不住\r\n                    window.close();\r\n                },\r\n                ContextMenu: () => {\r\n                    //右击菜单效果  也拦不住\r\n                    //window.close();\r\n                    klBBLL.warn(\'播放器触发菜单\');\r\n                    klBBLL.areaKV.videoOptionArea.enterArea(klBBLL.areaKV.videoEmptyArea);\r\n                },\r\n\r\n\r\n                AudioVolumeMute: false,//静音切换\r\n                AudioVolumeDown: false,//系统音量\r\n                AudioVolumeUp: false,\r\n            },\r\n            makeElesFuns: [\r\n                (funIndex) => {\r\n                    if (klBBLL.areaKV.videoEmptyArea.durationBar === false) {\r\n                        klBBLL.areaKV.videoEmptyArea.durationBar = klBBLL.lib.getElementByClassName(\'bpx-player-control-wrap\');\r\n                    } else {\r\n                        if (klBBLL.areaKV.videoEmptyArea.hoverDurationBarCountDownNum > 0) {\r\n                            klBBLL.areaKV.videoEmptyArea.hoverDurationBarCountDownNum -= 1;\r\n                            klBBLL.lib.hoverEnterElement(klBBLL.areaKV.videoEmptyArea.durationBar);\r\n                        } else {\r\n                            klBBLL.lib.hoverOutElement(klBBLL.areaKV.videoEmptyArea.durationBar);\r\n                        }\r\n                    }\r\n                },\r\n                (funIndex) => {\r\n\r\n                    if (klBBLL.areaKV.videoEmptyArea.toggleFullScreenBtn === false && document.getElementsByClassName(\'bpx-player-ctrl-full\').length === 1) {\r\n                        klBBLL.areaKV.videoEmptyArea.toggleFullScreenBtn = document.getElementsByClassName(\'bpx-player-ctrl-full\')[0];\r\n                        delete klBBLL.areaKV.videoEmptyArea.makeElesFuns[funIndex];\r\n\r\n                    } else {\r\n                        //  klBBLL.warn(\'全屏按钮\',klBBLL.areaKV.videoEmptyArea.toggleFullScreenBtn===false,document.getElementsByClassName(\'bpx-player-ctrl-full\'));\r\n                    }\r\n                    //window.player.play()\r\n                    //window.player.pause()\r\n                },\r\n                (funIndex) => {\r\n\r\n                    if (klBBLL.areaKV.videoEmptyArea.toggleSubtitleBtn === false && document.getElementsByClassName(\'bpx-player-ctrl-subtitle\').length === 1) {\r\n                        klBBLL.areaKV.videoEmptyArea.toggleSubtitleBtn = document.getElementsByClassName(\'bpx-player-ctrl-subtitle\')[0];\r\n                        delete klBBLL.areaKV.videoEmptyArea.makeElesFuns[funIndex];\r\n\r\n                    }\r\n\r\n                },\r\n                (funIndex) => {\r\n                    if (klBBLL.areaKV.videoEmptyArea.toggleDanmuBtn === false && document.getElementsByClassName(\'bui-danmaku-switch-input\').length === 1) {\r\n                        klBBLL.areaKV.videoEmptyArea.toggleDanmuBtn = document.getElementsByClassName(\'bui-danmaku-switch-input\')[0];\r\n                        delete klBBLL.areaKV.videoEmptyArea.makeElesFuns[funIndex];\r\n\r\n                    }\r\n                },\r\n\r\n            ],\r\n            _enterArea: function () {\r\n                kl.log(\'进入\', klBBLL.areaKV.videoEmptyArea);\r\n                klBBLL.areaKV.videoEmptyArea.toggleFullScreen(true);\r\n            },\r\n            _exitArea: function () {\r\n                kl.log(\'退出\', klBBLL.areaKV.videoEmptyArea);\r\n                klBBLL.areaKV.videoEmptyArea.toggleFullScreen(false);\r\n            },\r\n\r\n        },\r\n\r\n        videoOptionArea: {\r\n            title: \'视频播放器-选项\',\r\n            isInitedArea: false,\r\n            isElesCountFixed: true,\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                ArrowLeft: true,\r\n                ArrowRight: true,\r\n                Enter: () => {\r\n                    klBBLL.log(`Enter:`, klBBLL.areaKV.videoOptionArea.CURR_ELE);\r\n                    klBBLL.areaKV.videoOptionArea.CURR_ELE.click();\r\n                    //klBBLL.areaKV.videoOptionArea.CURR_ELE.dispatchEvent(new Event(\'click\'));\r\n\r\n                },\r\n                ContextMenu: () => {\r\n\r\n                    klBBLL.warn(\'菜单触发菜单\');\r\n                    klBBLL.areaKV.videoOptionArea.enterArea(klBBLL.areaKV.videoEmptyArea);\r\n                },\r\n            },\r\n            div: kl.HTML.DIV(\'class="kl-video-opt color-bg-1 hide"\'),\r\n            optTable: kl.HTML.TABLE(),\r\n            eles: [],\r\n            barRootEle: false,\r\n            _init: function () {\r\n                document.body.classList.add(\'kl-video-page\');\r\n                document.body.append(klBBLL.areaKV.videoOptionArea.div.addNodes([klBBLL.areaKV.videoOptionArea.optTable]));\r\n            },\r\n            makeElesFuns: [\r\n\r\n                (funIndex) => {\r\n                    let checkboxInput = kl.HTML.CHECKBOX(\'\', \'\', {checked: window.player.danmaku.isOpen()});\r\n                    let span = kl.HTML.SPAN();\r\n                    let label = kl.HTML.LABEL();\r\n                    let tr = klBBLL.areaKV.videoOptionArea.optTable.insertRow();\r\n                    tr.insertCell().textContent = \'弹幕\';\r\n                    tr.insertCell().appendChild(label.addNodes([checkboxInput, span]));\r\n\r\n                    klBBLL.areaKV.videoOptionArea.eles.push(label);\r\n                    checkboxInput.addEventListener(\'change\', () => {\r\n                        if (window.player.danmaku.isDisabled()) {\r\n                            klBBLL.lib.addMsg(\'弹幕被禁用了\');\r\n                        } else {\r\n                            if (checkboxInput.checked) {\r\n                                window.player.danmaku.open();\r\n                            } else {\r\n                                window.player.danmaku.close();\r\n                            }\r\n                        }\r\n\r\n                    });\r\n                    delete klBBLL.areaKV.videoOptionArea.makeElesFuns[funIndex];\r\n                },\r\n                (funIndex) => {\r\n                    let btn = kl.HTML.BUTTON_BUTTON(\'\', \'字幕\');\r\n                    let tr = klBBLL.areaKV.videoOptionArea.optTable.insertRow();\r\n                    tr.insertCell().textContent = \'字幕\';\r\n                    tr.insertCell().appendChild(btn);\r\n                    klBBLL.areaKV.videoOptionArea.eles.push(btn);\r\n                    btn.onclick = klBBLL.areaKV.videoEmptyArea.toggleSubtitle;\r\n                    delete klBBLL.areaKV.videoOptionArea.makeElesFuns[funIndex];\r\n                },\r\n                (funIndex) => {\r\n                    let ar = Object.values(document.getElementsByClassName(\'bpx-player-ctrl-quality-menu-item\'));\r\n                    if (ar.length > 0) {\r\n                        let tr = klBBLL.areaKV.videoOptionArea.optTable.insertRow();\r\n                        tr.insertCell().textContent = \'清晰度\';\r\n                        ar.map(ele => {\r\n                            let btn = kl.HTML.BUTTON_BUTTON(\'\', ele.textContent);\r\n                            klBBLL.areaKV.videoOptionArea.eles.push(btn);\r\n                            btn.addEventListener(\'click\', () => {\r\n                                window.player.requestQuality(ele.getAttribute(\'data-value\'));\r\n                            });\r\n                            tr.insertCell().appendChild(btn);\r\n                        });\r\n                        delete klBBLL.areaKV.videoOptionArea.makeElesFuns[funIndex];\r\n                    }\r\n                },\r\n                (funIndex) => {\r\n                    let ar = Object.values(document.getElementsByClassName(\'bpx-player-ctrl-playbackrate-menu-item\'));\r\n                    if (ar.length > 0) {\r\n                        let tr = klBBLL.areaKV.videoOptionArea.optTable.insertRow();\r\n                        tr.insertCell().textContent = \'速度\';\r\n                        ar.map(ele => {\r\n                            let btn = kl.HTML.BUTTON_BUTTON(\'\', ele.textContent);\r\n                            klBBLL.areaKV.videoOptionArea.eles.push(btn);\r\n                            btn.addEventListener(\'click\', () => {\r\n                                window.player.setPlaybackRate(ele.getAttribute(\'data-value\'));\r\n                            });\r\n                            tr.insertCell().appendChild(btn);\r\n                        });\r\n                        delete klBBLL.areaKV.videoOptionArea.makeElesFuns[funIndex];\r\n                    }\r\n                },\r\n\r\n                //document.getElementsByClassName(\'bpx-player-ctrl-quality-menu-item\')\r\n            ],\r\n\r\n\r\n            _exitArea: function () {\r\n                kl.log(\'退出\', klBBLL.areaKV.videoOptionArea);\r\n                klBBLL.areaKV.videoOptionArea.hide();\r\n            },\r\n        },\r\n\r\n        videoEplistArea: {\r\n            title: \'视频播-分集-列表\',\r\n            isInitedArea: false,\r\n            countTimes: 0,\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                ArrowLeft: true,\r\n                ArrowRight: true,\r\n                Enter: () => {\r\n                    klBBLL.log(`Enter:`, klBBLL.areaKV.videoEplistArea.CURR_ELE);\r\n                    klBBLL.areaKV.videoEplistArea.CURR_ELE.click();\r\n\r\n                },\r\n                ContextMenu: () => {\r\n                    klBBLL.areaKV.videoOptionArea.enterArea(klBBLL.areaKV.videoEplistArea);\r\n                },\r\n            },\r\n            div: kl.HTML.DIV(\'class="kl-video-eplist color-bg-1 hide"\'),\r\n            eles: [],\r\n            barRootEle: false,\r\n            _init: function () {\r\n                // document.body.classList.add(\'kl-video-page\');\r\n                document.body.append(klBBLL.areaKV.videoEplistArea.div);\r\n            },\r\n            makeElesFuns: [\r\n                (funIndex) => {\r\n                    let ar = document.getElementsByClassName(\'video-pod__list\');\r\n                    if (ar.length === 1) {\r\n                        let epListDiv = kl.HTML.DIV();\r\n                        klBBLL.areaKV.videoEplistArea.div.addNodes([epListDiv]);\r\n                        Object.values(ar[0].children).forEach((tmpEle, tmpI) => {\r\n                            let vid = tmpEle.getAttribute(\'data-key\');\r\n                            let btn = kl.HTML.BUTTON_BUTTON(\'\', tmpI.toString() + \':\' + tmpEle.textContent.trim());\r\n                            klBBLL.areaKV.videoEplistArea.eles.push(btn);\r\n                            btn.addEventListener(\'click\', () => {\r\n                                window.location.href = `https://www.bilibili.com/video/${vid}`;\r\n\r\n                            });\r\n                            epListDiv.addNode(btn);\r\n                        });\r\n                        delete klBBLL.areaKV.videoEplistArea.makeElesFuns[funIndex];\r\n                    }\r\n\r\n                    klBBLL.areaKV.videoEplistArea.countTimes = klBBLL.areaKV.videoEplistArea.countTimes + 1;\r\n                    if (klBBLL.areaKV.videoEplistArea.countTimes > 10) {\r\n                        let btn = kl.HTML.EM(\'\', \'未发现分集\');\r\n                        klBBLL.areaKV.videoEplistArea.eles.push(btn);\r\n                        klBBLL.areaKV.videoEplistArea.div.addNode(btn);\r\n                        delete klBBLL.areaKV.videoEplistArea.makeElesFuns[funIndex];\r\n                    }\r\n                },\r\n                //document.getElementsByClassName(\'bpx-player-ctrl-quality-menu-item\')\r\n            ],\r\n\r\n\r\n            _exitArea: function () {\r\n                kl.log(\'退出\', klBBLL.areaKV.videoEplistArea);\r\n                klBBLL.areaKV.videoEplistArea.hide();\r\n            },\r\n        },\r\n        videoRcmdListArea: {\r\n            title: \'视频播放-推荐-列表\',\r\n            isInitedArea: false,\r\n            moreRecCountTimes: 0,\r\n            fetchRecVideosCountTimes: 0,\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                ArrowLeft: true,\r\n                ArrowRight: true,\r\n                Enter: () => {\r\n                    klBBLL.log(`Enter:`, klBBLL.areaKV.videoRcmdListArea.CURR_ELE);\r\n                    //klBBLL.areaKV.videoRcmdListArea.CURR_ELE.click();\r\n                    klBBLL.log(klBBLL.CURR_AREA.CURR_ELE);\r\n                    let as = kl.xpathSearch(\'.//a\', klBBLL.CURR_AREA.CURR_ELE);\r\n                    klBBLL.log(as);\r\n                    if (as.length > 0) {\r\n                        //    as[0].click();\r\n                        // window.open(as[0].href);\r\n                        window.location.href = as[0].href;\r\n                        //  klBBLL.videoPlayerIframe.classList.remove(\'hide\');\r\n                    }\r\n\r\n                },\r\n                ContextMenu: () => {\r\n                    klBBLL.areaKV.videoOptionArea.enterArea(klBBLL.areaKV.videoRcmdListArea);\r\n                },\r\n            },\r\n            // div: kl.HTML.DIV(\'class="kl-video-eplist color-bg-1 hide"\'),\r\n            eles: [],\r\n            barRootEle: false,\r\n            _init: function () {\r\n            },\r\n            makeElesFuns: [\r\n                (funIndex) => {\r\n                    if (klBBLL.lib.getElementByClassName(\'rec-footer\', \'click\') !== false) {\r\n                        delete klBBLL.areaKV.videoRcmdListArea.makeElesFuns[funIndex];\r\n                    }\r\n                    klBBLL.areaKV.videoRcmdListArea.moreRecCountTimes = klBBLL.areaKV.videoRcmdListArea.moreRecCountTimes + 1;\r\n                    if (klBBLL.areaKV.videoRcmdListArea.moreRecCountTimes > 10) {\r\n                        let btn = kl.HTML.EM(\'\', \'未发现更多推荐视频\');\r\n                        klBBLL.areaKV.videoRcmdListArea.eles.push(btn);\r\n                        //     klBBLL.areaKV.videoRcmdListArea.div.addNode(btn);\r\n                        delete klBBLL.areaKV.videoRcmdListArea.makeElesFuns[funIndex];\r\n                    }\r\n                },\r\n                (funIndex) => {\r\n                    let ar = document.getElementsByClassName(\'rec-list\');\r\n                    if (ar.length === 1) {\r\n                        Object.values(ar[0].children).forEach((tmpEle, tmpI) => {\r\n                            if (tmpEle.isFlaged !== true) {\r\n                                klBBLL.areaKV.videoRcmdListArea.eles.push(tmpEle);\r\n                                tmpEle.isFlaged = true;\r\n                            }\r\n                        });\r\n                        //delete klBBLL.areaKV.videoRcmdListArea.makeElesFuns[funIndex];\r\n                    }\r\n\r\n                    klBBLL.areaKV.videoRcmdListArea.fetchRecVideosCountTimes = klBBLL.areaKV.videoRcmdListArea.fetchRecVideosCountTimes + 1;\r\n                    if (klBBLL.areaKV.videoRcmdListArea.fetchRecVideosCountTimes > 10) {\r\n                        klBBLL.warn(\'退出遍历 推荐视频\');\r\n                        delete klBBLL.areaKV.videoRcmdListArea.makeElesFuns[funIndex];\r\n                    }\r\n                },\r\n                //document.getElementsByClassName(\'bpx-player-ctrl-quality-menu-item\')\r\n            ],\r\n\r\n            _enterArea: function () {\r\n                let listRootEle = klBBLL.lib.getElementByClassName(\'rec-list\');\r\n                if (listRootEle !== false) {\r\n                    if (listRootEle._defaultParnetEle === undefined) {\r\n                        listRootEle._defaultParnetEle = listRootEle.parentElement;\r\n                        document.body.append(listRootEle);\r\n                    }\r\n                    listRootEle.classList.add(\'kl-video-rcmd-list\');\r\n                    klBBLL.areaKV.videoRcmdListArea.init2DArray();\r\n                }\r\n            },\r\n            _exitArea: function () {\r\n                kl.log(\'退出\', klBBLL.areaKV.videoRcmdListArea);\r\n                // klBBLL.areaKV.videoRcmdListArea.hide();\r\n                let listRootEle = klBBLL.lib.getElementByClassName(\'rec-list\');\r\n                if (listRootEle !== false) {\r\n                    if (listRootEle._defaultParnetEle !== undefined) {\r\n                        listRootEle._defaultParnetEle.insertBefore(listRootEle, klBBLL.lib.getElementByClassName(\'rec-footer\'));\r\n                    }\r\n                    listRootEle.classList.remove(\'kl-video-rcmd-list\');\r\n                }\r\n            },\r\n        },\r\n        videoCommentsArea: {\r\n            title: \'视频播放-评论-列表\',\r\n            isInitedArea: false,\r\n            isElesCountFixed: true,\r\n            KeyCodeKV: {\r\n                ArrowUp: true,\r\n                ArrowDown: true,\r\n                ArrowLeft: true,\r\n                ArrowRight: true,\r\n                Enter: () => {\r\n                    klBBLL.log(`Enter:`, klBBLL.areaKV.videoCommentsArea.CURR_ELE);\r\n                    klBBLL.areaKV.videoCommentsArea.CURR_ELE.click();\r\n                    //klBBLL.areaKV.videoOptionArea.CURR_ELE.dispatchEvent(new Event(\'click\'));\r\n\r\n                },\r\n            },\r\n            div: kl.HTML.DIV(\'class="kl-video-eplist color-bg-1 hide"\'),\r\n            eles: [],\r\n            barRootEle: false,\r\n            _init: function () {\r\n                document.body.classList.add(\'kl-video-page\');\r\n                //   document.body.append(klBBLL.areaKV.videoCommentsArea.div.addNodes([klBBLL.areaKV.videoCommentsArea.optTable]));\r\n            },\r\n            makeElesFuns: [\r\n                (funIndex) => {\r\n                    //bpx-player-ctrl-eplist-section-content\r\n                    let ar = document.getElementsByClassName(\'bpx-player-ctrl-eplist-section-content\');\r\n                    if (ar.length === 1) {\r\n                        let epListDiv = kl.HTML.DIV();\r\n                        klBBLL.areaKV.videoCommentsArea.div.addNodes([epListDiv]);\r\n                        Object.values(ar[0].children).forEach((tmpEle, tmpI) => {\r\n                            let btn = kl.HTML.BUTTON_BUTTON(\'\', tmpI.toString() + \':\' + tmpEle.textContent.trim());\r\n                            klBBLL.areaKV.videoCommentsArea.eles.push(btn);\r\n                            btn.onclick = tmpEle.onclick;\r\n                            epListDiv.addNode(btn);\r\n                        });\r\n\r\n                        delete klBBLL.areaKV.videoCommentsArea.makeElesFuns[funIndex];\r\n                    }\r\n                },\r\n                //document.getElementsByClassName(\'bpx-player-ctrl-quality-menu-item\')\r\n            ],\r\n\r\n\r\n            _exitArea: function () {\r\n                kl.log(\'退出\', klBBLL.areaKV.videoCommentsArea);\r\n                klBBLL.areaKV.videoCommentsArea.hide();\r\n            },\r\n        },\r\n    },\r\n    desk: {\r\n        /**@var flaat:left 的弹出层*/\r\n        modal: new Emt(\'div\', \'class="kl-desk-modal  hide"\'),\r\n        msgsBox: kl.HTML.DIV(\'class="kl-msgs-box"\'),\r\n    },\r\n\r\n\r\n    initAreaObj: function (blockObj) {\r\n        blockObj.isInitedArea = true;\r\n        blockObj.eles = Array.isArray(blockObj.eles) ? blockObj.eles : [];\r\n        blockObj.leftOut = blockObj.leftOut || false;\r\n        blockObj.rightOut = blockObj.rightOut || false;\r\n        if (blockObj._init) {\r\n            blockObj._init();\r\n        }\r\n        let handle = {\r\n            isKlBlock: true,\r\n            CURR_ELE: false,\r\n            tops: [],\r\n            left: [],\r\n            y2x2ele_KV: {},\r\n            hide: () => {\r\n                if (blockObj.div === undefined) {\r\n                    return false;\r\n                }\r\n                blockObj.div.classList.add(\'hide\');\r\n                if (blockObj.div.parentElement.firstElementChild === blockObj.div) {\r\n                    Object.values(blockObj.div.parentElement.children).map(ele => {\r\n                        ele.classList.add(\'hide\');\r\n                    });\r\n                    blockObj.div.parentElement.classList.add(\'hide\');\r\n                }\r\n            },\r\n            showArea: () => {\r\n                if (blockObj._show) {\r\n                    blockObj._show();\r\n                }\r\n                if (blockObj.div === undefined) {\r\n                    return false;\r\n                }\r\n\r\n                blockObj.div.classList.remove(\'hide\');\r\n                blockObj.div.parentElement.classList.remove(\'hide\');\r\n\r\n\r\n            },\r\n            enterArea: function (reffreArea) {\r\n                klBBLL.CURR_AREA = blockObj;\r\n                if (reffreArea) {\r\n                    blockObj._REFFRE_AREA = reffreArea;\r\n                    reffreArea.exitArea();\r\n                } else {\r\n                    blockObj._REFFRE_AREA = false;\r\n                }\r\n                klBBLL.warn(`enterArea:  ${blockObj.title}`);\r\n                blockObj.showArea();\r\n\r\n                klBBLL.CURR_AREA.init2DArray();\r\n\r\n\r\n                if (blockObj._enterArea && reffreArea) {\r\n                    blockObj._enterArea(reffreArea);\r\n                }\r\n\r\n                klBBLL.warn(\'enterArea\', blockObj.title, blockObj.eles);\r\n                blockObj.move.flushCurrentEleInfo(0);\r\n            },\r\n            exitArea: function () {\r\n                klBBLL.warn(`exitArea:  ${blockObj.title}`);\r\n                if (blockObj._exitArea) {\r\n                    blockObj._exitArea();\r\n                } else {\r\n                    blockObj.hide();\r\n                }\r\n            },\r\n            _initAreaEles: function () {\r\n                if (blockObj.isVideoTool) {\r\n                    blockObj.eles.forEach(tmpEle => {\r\n                        if (tmpEle.infoSpan === undefined) {\r\n                            tmpEle.infoSpan = {};\r\n                        }\r\n                    });\r\n                } else {\r\n                    blockObj.eles.forEach(tmpEle => {\r\n                        if (tmpEle.infoSpan === undefined) {\r\n                            let span = new Emt(\'span\', \'class="kl-test"\', \'####\');\r\n                            tmpEle.insertBefore(span, tmpEle.firstElementChild);\r\n                            tmpEle.isKlElement = true;\r\n                            tmpEle.classList.add(\'kl-flag-ele\');\r\n                            tmpEle.infoSpan = span;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return blockObj;\r\n            },\r\n            init2DArray: function () {\r\n                let tops = [];\r\n                let lefts = [];\r\n                let y2x2ele_KV = [];\r\n                klBBLL.log(\'init2DArray\', blockObj.title, blockObj.eles);\r\n                blockObj._initAreaEles();\r\n                blockObj.eles.forEach((tmpEle, tmpIndex) => {\r\n                    if(blockObj.xy2DArrayType===\'root\'){\r\n                        tmpEle.klX = tmpEle.offsetLeft;\r\n                        tmpEle.klY = tmpEle.offsetTop;\r\n                    }else{\r\n                        //不太适合 历史 动态加载 元素太多\r\n                        const rect = tmpEle.getBoundingClientRect();\r\n                        tmpEle.klX = parseInt(rect.left);\r\n                        tmpEle.klY = parseInt(rect.top);\r\n                    }\r\n\r\n\r\n                    //  klBBLL.log(tmpEle, tmpIndex, {x: tmpEle.klX, y: tmpEle.klY});\r\n                    if (tops.indexOf(tmpEle.klY) === -1) {\r\n                        tops.push(tmpEle.klY);\r\n                        y2x2ele_KV[tmpEle.klY] = {};\r\n                    }\r\n                    if (lefts.indexOf(tmpEle.klX) === -1) {\r\n                        lefts.push(tmpEle.klX);\r\n                    }\r\n                    y2x2ele_KV[tmpEle.klY][tmpEle.klX] = tmpEle;\r\n                    tmpEle.infoSpan.textContent = `top:${tmpEle.klY}  left:${tmpEle.klX} index:${tmpIndex}`;\r\n                });\r\n                blockObj.tops = tops.sort((a, b) => {\r\n                    return a - b;\r\n                });\r\n                blockObj.lefts = lefts.sort((a, b) => {\r\n                    return a - b;\r\n                });\r\n                blockObj.y2x2ele_KV = y2x2ele_KV;\r\n                if (klBBLL.IS_DEBUG) {\r\n                    console.table(y2x2ele_KV);\r\n                }\r\n            },\r\n            setLeftAreaObj: function (leftAreaObj, isOneway) {\r\n                blockObj.leftAreaObj = leftAreaObj;\r\n                if (isOneway !== true) {\r\n                    blockObj.leftAreaObj.rightAreaObj = blockObj;\r\n                }\r\n            },\r\n            setRightAreaObj: function (rightAreaObj, isOneway) {\r\n                blockObj.rightAreaObj = rightAreaObj;\r\n                if (isOneway !== true) {\r\n                    blockObj.rightAreaObj.leftAreaObj = blockObj;\r\n                }\r\n            },\r\n            setDownAreaObj: function (downAreaObj, isOneway) {\r\n                blockObj.downAreaObj = downAreaObj;\r\n                if (isOneway !== true) {\r\n                    blockObj.downAreaObj.upAreaObj = blockObj;\r\n                }\r\n            },\r\n            setUpAreaObj: function (upAreaObj, isOneway) {\r\n                blockObj.upAreaObj = upAreaObj;\r\n                if (isOneway !== true) {\r\n                    blockObj.upAreaObj.downAreaObj = blockObj;\r\n                }\r\n            },\r\n            move: {\r\n                outEle: function () {\r\n                    if (blockObj.CURR_ELE.hoverOut) {\r\n                        blockObj.CURR_ELE.hoverOut();\r\n                    }\r\n                },\r\n                reScroll: function (p) {\r\n                    if (!blockObj.CURR_ELE) {\r\n                        return false;\r\n                    }\r\n                    const rect = blockObj.CURR_ELE.getBoundingClientRect();\r\n                    if (0) {\r\n                        klBBLL.log(\'reScroll\', {\r\n                            CURR_ELE: blockObj.CURR_ELE,\r\n                            top: rect.top,       // 元素顶部到视口顶部的距离\r\n                            right: rect.right,   // 元素右侧到视口左侧的距离\r\n                            bottom: rect.bottom, // 元素底部到视口顶部的距离\r\n                            left: rect.left,     // 元素左侧到视口左侧的距离\r\n                            width: rect.width,   // 元素宽度\r\n                            height: rect.height  // 元素高度\r\n                        });\r\n                    }\r\n                    if(blockObj.xyType===\'\'){\r\n\r\n\r\n                    }else{\r\n                        if (rect.top < (240 + rect.height)) {\r\n                            //  document.scrollingElement.scrollTop = document.scrollingElement.scrollTop - rect.top + 240;\r\n                        }\r\n                        if ((\r\n                            rect.top >= 0 &&\r\n                            rect.left >= 0 &&\r\n                            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n                            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n                        )) {\r\n                            //  klBBLL.log(\'完全在显示区域内\');\r\n                        } else {\r\n                            klBBLL.log(\'不在显示区域内\',p,rect.top);\r\n                            let wh = window.innerHeight;\r\n                            let base_top = 400;\r\n                            if (p === 1) {\r\n                                document.scrollingElement.scrollTop = document.scrollingElement.scrollTop + rect.top;\r\n                            } else if (p === -1) {\r\n                                document.scrollingElement.scrollTop = document.scrollingElement.scrollTop + rect.top - wh + rect.height;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n                },\r\n                flushCurrentEleInfo: function (newCurrentEle) {\r\n                    blockObj.init2DArray();\r\n                    if (blockObj.y2x2ele_KV.length === 0) {\r\n\r\n                    }\r\n                    if (blockObj.CURR_ELE) {\r\n                        blockObj.move.outEle();\r\n                    }\r\n                    if (newCurrentEle === 0) {\r\n                        newCurrentEle = blockObj.eles[0] || false;\r\n                    }\r\n                    //newCurrentEle === undefined ||\r\n                    if (blockObj.CURR_ELE && newCurrentEle && blockObj.CURR_ELE.klX === newCurrentEle.klX && blockObj.CURR_ELE.klY === newCurrentEle.klY) {\r\n                        // return false;\r\n                    }\r\n                    let old = blockObj.CURR_ELE;\r\n                    if (newCurrentEle) {\r\n                        blockObj.CURR_ELE = newCurrentEle;\r\n                    }\r\n\r\n                    if (blockObj.CURR_ELE === false) {\r\n                        if (blockObj.eles.length === 0) {\r\n                            let err_msg = `当前 [${blockObj.title}] area没有ele`;\r\n                            // alert(err_msg);\r\n                            //   klBBLL.warn(err_msg, blockObj);\r\n                            // throw err_msg;\r\n                        } else {\r\n                            blockObj.CURR_ELE = blockObj.eles[0] || false;\r\n                        }\r\n                    }\r\n                    if (blockObj.CURR_ELE !== false) {\r\n                        Object.values(document.getElementsByClassName(\'kl-hover\')).forEach((ele) => {\r\n                            ele.classList.remove(\'kl-hover\');\r\n                        });\r\n                        if (blockObj.isVideoTool) {\r\n\r\n                        } else {\r\n                            blockObj.CURR_ELE.classList.add(\'kl-hover\');\r\n                        }\r\n\r\n                        if (blockObj.CURR_ELE.hoverEnter) {\r\n                            blockObj.CURR_ELE.hoverEnter();\r\n                        }\r\n\r\n                        //  klBBLL.warn(blockObj);\r\n                        blockObj.CURR_ELE.YIndex = Array.prototype.indexOf.call(blockObj.tops, blockObj.CURR_ELE.klY);\r\n                        //   klBBLL.log([blockObj.CURR_ELE.klY, blockObj.tops,   blockObj.CURR_ELE.YIndex]);\r\n                        let lefts = Object.keys(blockObj.y2x2ele_KV[blockObj.CURR_ELE.klY]).map(v => parseInt(v)).sort((a, b) => {\r\n                            return a - b;\r\n                        });\r\n                        blockObj.CURR_ELE.XIndex = Array.prototype.indexOf.call(lefts, blockObj.CURR_ELE.klX);\r\n\r\n                        blockObj.CURR_ELE.hasRightIndex = (lefts.length - 1) > blockObj.CURR_ELE.XIndex;\r\n                        blockObj.CURR_ELE.hasDownIndex = (blockObj.tops.length - 1) > blockObj.CURR_ELE.YIndex;\r\n                        blockObj.CURR_ELE.hasLeftIndex = blockObj.CURR_ELE.XIndex > 0;\r\n                        blockObj.CURR_ELE.hasUpIndex = blockObj.CURR_ELE.YIndex > 0;\r\n                        const rect = blockObj.CURR_ELE.getBoundingClientRect();\r\n\r\n                        if (newCurrentEle) {\r\n                            klBBLL.log(`old:{  x:${old.klX} y:${old.klY} Yindex:${old.YIndex} Xindex:${old.XIndex} }`);\r\n                            klBBLL.log(`new:{  x:${blockObj.CURR_ELE.klX} y:${blockObj.CURR_ELE.klY} Yindex:${blockObj.CURR_ELE.YIndex} Xindex:${blockObj.CURR_ELE.XIndex} }`, lefts);\r\n                            klBBLL.log({\r\n                                oldEle: old,\r\n                                newEle: blockObj.CURR_ELE,\r\n                                xxx: old === blockObj.CURR_ELE,\r\n                            });\r\n                        }\r\n\r\n                    }\r\n                },\r\n                /**\r\n                 * @param p 向量  -1 向上 1 向下\r\n                 * @private\r\n                 */\r\n                _y: function (p) {\r\n                    klBBLL.log(blockObj, blockObj.CURR_ELE.YIndex);\r\n                    let hasNew = false;\r\n                    let newYIndex = blockObj.CURR_ELE.YIndex + p;\r\n                    if (blockObj.tops[newYIndex] === undefined) {\r\n                        return \'到头了\';\r\n                    }\r\n                    let newY = blockObj.tops[newYIndex];\r\n                    klBBLL.log(`old:{  x:${blockObj.CURR_ELE.klX} y:${blockObj.CURR_ELE.klY} Yindex:${blockObj.CURR_ELE.YIndex} }`);\r\n                    klBBLL.log(newY, blockObj.y2x2ele_KV[newY], blockObj.y2x2ele_KV[newY][blockObj.CURR_ELE.klX]);\r\n                    if (blockObj.y2x2ele_KV[newY] && blockObj.y2x2ele_KV[newY][blockObj.CURR_ELE.klX]) {\r\n\r\n                        handle.move.flushCurrentEleInfo(blockObj.y2x2ele_KV[newY][blockObj.CURR_ELE.klX]);\r\n                        hasNew = true;\r\n                    } else {\r\n                        klBBLL.log(\';\');\r\n                        //如果情况不理想，就按最糟糕算\r\n                        if (p === -1) {\r\n                            hasNew = \'上面到头了\';\r\n                            for (let i = newYIndex; i >= 0; i--) {\r\n                                let newY2 = blockObj.tops[i];\r\n                                let newYEles = Object.values(blockObj.y2x2ele_KV[newY2]);\r\n                                if (newYEles.length > 0) {\r\n                                    handle.move.flushCurrentEleInfo(newYEles[0]);\r\n                                    hasNew = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        } else if (p === 1) {\r\n                            hasNew = \'下面到头了\';\r\n                            for (let i = newYIndex; i < blockObj.tops.length; i++) {\r\n                                let newY2 = blockObj.tops[i];\r\n                                let newYEles = Object.values(blockObj.y2x2ele_KV[newY2]);\r\n                                if (newYEles.length > 0) {\r\n                                    handle.move.flushCurrentEleInfo(newYEles[0]);\r\n                                    hasNew = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return hasNew;\r\n\r\n                },\r\n                _x: function (p) {\r\n                    let lefts = Object.keys(blockObj.y2x2ele_KV[blockObj.CURR_ELE.klY]).map(v => parseInt(v)).sort((a, b) => {\r\n                        return a - b;\r\n                    });\r\n                    let XIndex = Array.prototype.indexOf.call(lefts, blockObj.CURR_ELE.klX);\r\n                    let newXIndex = XIndex + p;\r\n                    if (lefts[newXIndex] === undefined) {\r\n                        return \'到头了\';\r\n                    }\r\n                    let newX = lefts[newXIndex];\r\n\r\n                    klBBLL.log(blockObj, blockObj.CURR_ELE.YIndex);\r\n                    klBBLL.log(`old:{  x:${blockObj.CURR_ELE.klX} y:${blockObj.CURR_ELE.klY} Xindex:${XIndex} }`);\r\n\r\n                    if (blockObj.y2x2ele_KV[blockObj.CURR_ELE.klY][newX]) {\r\n                        handle.move.flushCurrentEleInfo(blockObj.y2x2ele_KV[blockObj.CURR_ELE.klY][newX]);\r\n                        return true;\r\n                    } else {\r\n                        // 到头了，想干啥?\r\n                        return `到头了，想干啥? ${blockObj.CURR_ELE.klY} newX: ${newX}`;\r\n                    }\r\n\r\n                },\r\n                up: function () {\r\n                    let res = handle.move._y(-1);\r\n                    if (res !== true) {\r\n                        klBBLL.warn(\'在搞什么Y飞机?\', res);\r\n                        if (blockObj.upAreaObj) {\r\n                            blockObj.upAreaObj.enterArea(blockObj);\r\n                        }\r\n                    }\r\n                    handle.move.reScroll(-1);\r\n                },\r\n                down: function () {\r\n                    let res = handle.move._y(1);\r\n                    if (res !== true) {\r\n                        klBBLL.warn(\'在搞什么Y飞机?\', res);\r\n                        if (blockObj.downAreaObj) {\r\n                            blockObj.downAreaObj.enterArea(blockObj);\r\n                        } else if (blockObj.KeyCodeKV.ArrowDownFalse !== undefined) {\r\n                            blockObj.KeyCodeKV.ArrowDownFalse();\r\n                        }\r\n                    }\r\n                    handle.move.reScroll(1);\r\n\r\n                },\r\n                left: function () {\r\n                    let res = handle.move._x(-1);\r\n                    if (res !== true) {\r\n                        klBBLL.warn(\'在搞什么X飞机?\', res);\r\n                        if (blockObj.leftAreaObj) {\r\n                            blockObj.leftAreaObj.enterArea(blockObj);\r\n                        }\r\n                    }\r\n                    handle.move.reScroll();\r\n                },\r\n                right: function () {\r\n                    let res = handle.move._x(1);\r\n                    if (res !== true) {\r\n                        klBBLL.warn(\'在搞什么X飞机?\', res, blockObj);\r\n                        if (blockObj.rightAreaObj) {\r\n                            blockObj.rightAreaObj.enterArea(blockObj);\r\n                        }\r\n                    }\r\n                    handle.move.reScroll();\r\n                },\r\n                enter: function () {\r\n                    klBBLL.log(klBBLL.CURR_AREA.CURR_ELE);\r\n                    klBBLL.CURR_AREA.CURR_ELE.click();\r\n                },\r\n            }\r\n        };\r\n\r\n        blockObj = Object.assign(blockObj, handle);\r\n        if (blockObj.isElesCountFixed === true) {\r\n            blockObj.makeElesFuns[0](0);\r\n        }\r\n        blockObj.init2DArray();\r\n        blockObj.move.flushCurrentEleInfo(0);\r\n        return blockObj;\r\n    },\r\n    init: function () {\r\n        window.klAssembly.log(\'初始化  BBLL \');\r\n        window.klAssembly.log(document.body.getAttribute(\'class\'));\r\n        klBBLL.warn(window.localStorage.getItem(\'isKlTvDebug\'), window.localStorage.getItem(\'isKlInCom\'));\r\n        klBBLL.debug(window.localStorage.getItem(\'isKlTvDebug\') === \'true\');\r\n        klBBLL.setInCom(window.localStorage.getItem(\'isKlInCom\') === \'true\');\r\n\r\n        document.body.classList.add(\'kl-body\');\r\n\r\n        klBBLL.lib.addMsg(\'start init\');\r\n        klBBLL.initAreaObj(klBBLL.areaKV.settingArea);\r\n        klBBLL.lib.addMsg(\'init setting ok\');\r\n\r\n        klBBLL.areaKeys = Object.keys(klBBLL.areaKV);\r\n        klBBLL.areaKeys.forEach((k) => {\r\n            klBBLL.areaKV[k].areaKey = k;\r\n            if (k.indexOf(\'video\') === 0) {\r\n                // klBBLL.areaKV[k].isVideoTool = true;\r\n            }\r\n        });\r\n\r\n        window.setInterval(() => {\r\n            klBBLL.markElements();\r\n            if (klBBLL.CURR_AREA.CURR_ELE === false) {\r\n              //  klBBLL.CURR_AREA.init2DArray();\r\n                klBBLL.CURR_AREA.move.flushCurrentEleInfo();\r\n            }\r\n        }, 500);\r\n        klBBLL.lib.addMsg(\'init interval ok \');\r\n\r\n\r\n        klBBLL.PAGE_FLAG = document.location.pathname.split(\'/\')[1] || \'\';\r\n        if (document.location.search === \'?tab=video\') {\r\n            klBBLL.PAGE_FLAG = \'subscribe_video\';\r\n        }\r\n        klBBLL.log(`PAGE_FLAG: [${klBBLL.PAGE_FLAG}]`);\r\n        klBBLL.lib.addMsg(`PAGE_FLAG: [${klBBLL.PAGE_FLAG}]`);\r\n        switch (klBBLL.PAGE_FLAG) {\r\n            //首页,[通用] + [推荐|热门|导航] + [幻灯片|列表]\r\n            case \'\':\r\n                klBBLL.initAreaObj(klBBLL.areaKV.rcmdVideoArea);\r\n                klBBLL.areaKV.rcmdVideoArea.setUpAreaObj(klBBLL.areaKV.settingArea);\r\n                //klBBLL.areaKV.rcmdVideoArea.enterArea(klBBLL.areaKV.settingArea);\r\n                klBBLL.areaKV.rcmdVideoArea.enterArea();\r\n                klBBLL.areaKV.settingArea.setUpAreaObj(klBBLL.areaKV.rcmdVideoArea, true);\r\n\r\n                break;\r\n            //播放页\r\n            case \'video\':\r\n                klBBLL.areaKV.videoEmptyArea.isInitedArea = true;\r\n                klBBLL.initAreaObj(klBBLL.areaKV.videoEmptyArea);\r\n                klBBLL.areaKV.videoEmptyArea.enterArea();\r\n\r\n                klBBLL.areaKV.videoOptionArea.isInitedArea = true;\r\n                klBBLL.initAreaObj(klBBLL.areaKV.videoOptionArea);\r\n                klBBLL.areaKV.videoOptionArea.setLeftAreaObj(klBBLL.areaKV.videoEmptyArea, true);\r\n                klBBLL.areaKV.videoOptionArea.setUpAreaObj(klBBLL.areaKV.videoEmptyArea, true);\r\n\r\n\r\n                klBBLL.initAreaObj(klBBLL.areaKV.videoEplistArea);\r\n                klBBLL.areaKV.videoEplistArea.setLeftAreaObj(klBBLL.areaKV.videoOptionArea);\r\n                klBBLL.areaKV.videoEplistArea.setUpAreaObj(klBBLL.areaKV.videoOptionArea, true);\r\n\r\n                klBBLL.initAreaObj(klBBLL.areaKV.videoRcmdListArea);\r\n                klBBLL.areaKV.videoRcmdListArea.setLeftAreaObj(klBBLL.areaKV.videoEplistArea);\r\n                klBBLL.areaKV.videoRcmdListArea.setUpAreaObj(klBBLL.areaKV.videoOptionArea, true);\r\n\r\n\r\n                /*\r\n                klBBLL.warn(\'直接全屏弃疗\');\r\n                document.querySelector(\'video\').requestFullscreen();\r\n                setTimeout(() => {\r\n                    klBBLL.warn(\'直接全屏弃疗1\');\r\n                    document.querySelector(\'video\').requestFullscreen();\r\n                    document.getElementsByClassName(\'bpx-player-ctrl-btn bpx-player-ctrl-full\')[0].click();\r\n\r\n                }, 5000);\r\n                */\r\n\r\n\r\n                break;\r\n\r\n            case \'subscribe_video\':\r\n                klBBLL.initAreaObj(klBBLL.areaKV.subscribeVideoArea);\r\n                klBBLL.areaKV.subscribeVideoArea.setUpAreaObj(klBBLL.areaKV.settingArea);\r\n                klBBLL.areaKV.subscribeVideoArea.enterArea();\r\n                klBBLL.areaKV.settingArea.setUpAreaObj(klBBLL.areaKV.subscribeVideoArea, true);\r\n\r\n                break;\r\n            case \'history\':\r\n                klBBLL.initAreaObj(klBBLL.areaKV.historyArea);\r\n                klBBLL.areaKV.historyArea.setUpAreaObj(klBBLL.areaKV.settingArea);\r\n                klBBLL.areaKV.historyArea.enterArea();\r\n                klBBLL.areaKV.settingArea.setUpAreaObj(klBBLL.areaKV.historyArea, true);\r\n\r\n                break;\r\n            default:\r\n                klBBLL.initAreaObj(klBBLL.areaKV.DefaultArea);\r\n                klBBLL.areaKV.DefaultArea.setUpAreaObj(klBBLL.areaKV.settingArea);\r\n                klBBLL.areaKV.DefaultArea.enterArea();\r\n                klBBLL.areaKV.settingArea.setUpAreaObj(klBBLL.areaKV.DefaultArea, true);\r\n\r\n                break;\r\n        }\r\n        klBBLL.lib.addMsg(\'init bizArea ok \');\r\n\r\n        document.body.addEventListener(\'keydown\', function (e) {\r\n            let keyCode = e.key;\r\n            let ctrlKey = e.ctrlKey;\r\n            let shiftKey = e.shiftKey;\r\n            klBBLL.log("\\n\\n\\n", `${keyCode} ctrl ${ctrlKey} shift: ${shiftKey}  ${e.key} ${e.code} ${e.keyCode} ${e.which}`, e);\r\n            if (klBBLL.CURR_AREA.KeyCodeKV[keyCode] === undefined || klBBLL.CURR_AREA.KeyCodeKV[keyCode] === false) {\r\n                //什么都不干，让默认事件来\r\n            } else if (klBBLL.CURR_AREA.KeyCodeKV[keyCode] === true) {\r\n                switch (keyCode) {\r\n                    case \'ArrowUp\':\r\n                        klBBLL.CURR_AREA.move.up();\r\n                        break;\r\n                    case \'ArrowDown\':\r\n                        klBBLL.CURR_AREA.move.down();\r\n                        break;\r\n                    case \'ArrowLeft\':\r\n                        klBBLL.CURR_AREA.move.left();\r\n                        break;\r\n                    case \'ArrowRight\':\r\n                        klBBLL.CURR_AREA.move.right();\r\n                        break;\r\n                    case \'Enter\':\r\n                        klBBLL.CURR_AREA.move.enter();\r\n                        break;\r\n                    case \'Escape\'://27\r\n                        klBBLL.log(`[${klBBLL.PAGE_FLAG}]`);\r\n                        if (klBBLL.PAGE_FLAG === \'video\') {\r\n                            window.close();\r\n                        }\r\n                        break;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n            } else {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (klBBLL.CURR_AREA.KeyCodeKV[keyCode]() !== true) {\r\n\r\n                }\r\n            }\r\n\r\n\r\n            if (ctrlKey && shiftKey && keyCode === \'S\') {\r\n\r\n            }\r\n        });\r\n        document.addEventListener(\'contextmenu\', function (e) {\r\n            if (klBBLL.IS_DEBUG === false) {\r\n                console.warn(\'阻止 contextmenu\');\r\n                klBBLL.lib.keyInput(\'ContextMenu\');\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n        klBBLL.lib.addMsg(\'add keydown event listener ok \');\r\n\r\n        klBBLL.removeOthers();\r\n        klBBLL.lib.addMsg(\'remove others ok \');\r\n\r\n        klBBLL.markElements();\r\n        klBBLL.lib.addMsg(\'1st time markElements ok \');\r\n\r\n    },\r\n    removeOthers: function () {\r\n        // return false;\r\n        let xpathPartStrs = [];\r\n        //这几个删除会导致白屏检查\r\n        xpathPartStrs = [\r\n            `.//div[contains(@class,\'header-channel\')]`,//频道导航条\r\n            `.//div[contains(@class,\'recommended-swipe\')]`,//推荐滚动幻灯片\r\n            `.//div[contains(@class,\'bili-header__bar\')]`,//头像那个 浮动条\r\n            `.//div[contains(@class,\'bili-header__banner\')]`,//头部背景\r\n        ];\r\n        //x 删除这些不必要得视频，也会触发白屏 一个首页拉了两页就1000M内存也是神人\r\n        xpathPartStrs = [`.//div[contains(@class,\'v-inline-player\')]`];\r\n        xpathPartStrs = [];\r\n        //recommended-swipe grid-anchor\r\n        xpathPartStrs.forEach(xpathPartStr => {\r\n            Object.values(kl.xpathSearch(`.//div[${xpathPartStr}]`)).forEach(tmpEle => {\r\n                //tmpEle.remove();//删除会有概率触发白屏检查\r\n                tmpEle.setStyle({display: \'none\'}).removeAllChildNodes();\r\n            });\r\n        });\r\n\r\n        klBBLL.warn(\'开始隐藏\');\r\n        let as = [];\r\n        let hrefs = [];\r\n        let hiddenClassKws = [\'header-channel\', \'bili-header\'];\r\n        hiddenClassKws.forEach(kw => {\r\n            Object.values(document.getElementsByClassName(kw)).forEach(tmpEle => {\r\n                tmpEle.classList.add(\'hide\');\r\n                Object.values(kl.xpathSearch(\'.//a\', tmpEle)).forEach(a2 => {\r\n                    if (hrefs.indexOf(a2.href) === -1) {\r\n                        hrefs.push(a2.href);\r\n                        as.push({href: a2.href, text: a2.textContent.trim()});\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        window.localStorage.setItem(\'kl-channel-link-infos\', JSON.stringify(as));\r\n        klBBLL.log(as);\r\n\r\n    },\r\n    markElements: () => {\r\n\r\n        //for of & Object.keys 都会有概率造成乱序    klBBLL.areaKV\r\n        // [\'settingArea\', \'rcmdVideoArea\', \'videoPlayerArea\'].\r\n        klBBLL.areaKeys.forEach(blockKey => {\r\n            if (klBBLL.areaKV[blockKey].isInitedArea === true) {\r\n                let tmpCnt = klBBLL.areaKV[blockKey].eles.length;\r\n                klBBLL.areaKV[blockKey].makeElesFuns.forEach((markFun, tmp_i) => {\r\n                    if (markFun !== false) {\r\n                        try {\r\n                            let tmpEles = markFun(tmp_i);\r\n                            if (Array.isArray(tmpEles) && tmpEles.length > 0) {\r\n                                klBBLL.areaKV[blockKey].eles = klBBLL.areaKV[blockKey].eles.concat(tmpEles);\r\n                            }\r\n                        } catch (e) {\r\n                            klBBLL.error(`markFun error:${blockKey}  ${tmp_i}`, markFun, e.message);\r\n                        }\r\n                    }\r\n                });\r\n                if (tmpCnt !== klBBLL.areaKV[blockKey].eles.length) {\r\n                    // klBBLL.areaKV[blockKey].init2DArray(); 这会导致 bilibili 解析失败？\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n\r\n\r\n};\r\nwindow.klAssembly.isNeedBaseLib = false;\r\nwindow.klAssembly = Object.assign(window.klAssembly,\r\n    {\r\n        BBLL: klBBLL,\r\n    });\r\n\r\nklBBLL.log(\'KL_BBLL loaded\');\r\n\r\nif (top === window) {\r\n\r\n    klBBLL.init();\r\n    //window.klAssembly.showOpts();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n//  /data/codes/advanced/frontend/web/static/js/tampermonkey/bilibili/index.js <--\n//end\n\n';

    GM_addElement(document.body, 'script', {
        textContent: scriptContent,
    });


})();